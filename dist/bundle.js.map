{"version":3,"sources":["webpack/bootstrap 1fd29e56c97d9c46d916","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\PositionComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\SnakeHeadComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\EntitySystem.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\UniqueType.js","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\common\\SetEntityPosition.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\DirectionComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\DoubleLinkComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\FeedableComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\FoodComponents.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\ObstacleComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\Bits.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\Constructor.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color-convert\\conversions.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color-name\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\common\\GameGui.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\common\\Vector.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\components\\WallComponent.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\factories\\SnakeFactory.ts","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\Entity.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\Family.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\Lookup.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-signals\\dist\\src\\Signal.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color-convert\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color-convert\\route.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color-string\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\color\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\simple-swizzle\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\simple-swizzle\\node_modules\\is-arrayish\\index.js","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\common\\LayeredGui.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\common\\PlayField.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\startGame.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\ClearRenderSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\EatingSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\FoodDispenserSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\FoodRenderSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\GameStateSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\MovementInputSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\ObstacleGeneratorSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\SnakeCollisionSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\SnakeMovementSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\SnakeRenderSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\game\\systems\\WallRenderSystem.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\main.ts","D:\\work\\dev\\html_js\\Snake_ECS\\src\\utils\\windowUtils.ts","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\Component.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\core\\Engine.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\systems\\IntervalIteratingSystem.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\systems\\IntervalSystem.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\systems\\IteratingSystem.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\systems\\SortedIteratingSystem.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\Blueprint.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\ComponentFactory.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\DelayedOperationHandler.js","D:\\work\\dev\\html_js\\Snake_ECS\\node_modules\\typed-ecstasy\\dist\\src\\utils\\EntityFactory.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;ACpCA,gDAAyC;AAEzC,OAAa,iBAAkB,SAAQ,yBAAS;KAAhD;;SAEI,MAAC,GAAW,CAAC;SACb,MAAC,GAAW,CAAC;KACjB,CAAC;EAAA;AAJD,+CAIC;;;;;;;;;ACND,gDAAyC;AAEzC,2GAA0G;AAC1G;;IAEG;AACH,OAAa,kBAAmB,SAAQ,yBAAS;KAE7C,YACW,SAAiB,CAAC,EAClB,UAAmB,IAAI,EACvB,SAAiB,CAAC;SAEzB,KAAK,EAAE;SAJA,WAAM,GAAN,MAAM,CAAY;SAClB,YAAO,GAAP,OAAO,CAAgB;SACvB,WAAM,GAAN,MAAM,CAAY;KAG7B,CAAC;EACJ;AATD,iDASC;;;;;;;ACfD;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,yC;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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C,KAAK,EAAE;SADS,YAAO,GAAP,OAAO,CAAY;KAEvC,CAAC;EACJ;AALD,+CAKC;;;;;;;;;ACVD,gDAAyC;AAEzC,+FAA8F;AAC9F,OAAa,kBAAmB,SAAQ,yBAAS;KAE7C,YAAoB,QAAgB,CAAC;SACjC,KAAK,EAAE;SADS,UAAK,GAAL,KAAK,CAAY;KAErC,CAAC;EACJ;AALD,iDAKC;;;;;;;;;ACRD,gDAAyC;AAEzC,OAAa,iBAAkB,SAAQ,yBAAS;EAE/C;AAFD,+CAEC;;;;;;;ACJD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,WAAW;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,WAAW;AACxD;AACA;AACA,mCAAkC,UAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA,qBAAoB,yBAAyB;AAC7C;AACA;AACA,gCAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,QAAQ;AAC9C;AACA;AACA;AACA;AACA,qBAAoB,yBAAyB;AAC7C;AACA,4BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,4DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAoE,gBAAgB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,6DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA,6DAA4D,OAAO;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAuE,QAAQ;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,uBAAuB;AAC7D;AACA;AACA;AACA;AACA,wEAAuE,QAAQ;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,iC;;;;;;AC7UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC,gEAAgE;AACjE,wC;;;;;;AC7CA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO,2BAA2B;AAClC,QAAO,2BAA2B;AAClC,QAAO,2BAA2B;AAClC,QAAO,2BAA2B;AAClC,SAAQ,4BAA4B;AACpC,QAAO,2BAA2B;AAClC,QAAO,2BAA2B;AAClC,QAAO,2BAA2B;AAClC,QAAO,6BAA6B;AACpC,YAAW,iCAAiC;AAC5C,WAAU,gCAAgC;AAC1C,YAAW,iCAAiC;AAC5C,QAAO,qCAAqC;AAC5C,UAAS,2CAA2C;AACpD,SAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAqD,gBAAgB;AACrE,oDAAmD,cAAc;AACjE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA;;AAEA;AACA,iBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO,QAAQ;AAC/B,iBAAgB,OAAO,QAAQ;AAC/B,kBAAiB,OAAO,OAAO;AAC/B,kBAAiB,OAAO,OAAO;AAC/B,iBAAgB,QAAQ,OAAO;AAC/B,iBAAgB,QAAQ,OAAO;AAC/B;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uEAAsE;;AAEtE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAA+C,EAAE,UAAU,EAAE;AAC7D;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;;AAEA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAkE,gBAAgB;AAClF;AACA;AACA;AACA,gEAA+D,mBAAmB;AAClF;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,mC;;;;;;AChJA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,2BAA0B,gBAAgB;AAC1C;AACA;AACA,gBAAe,iBAAiB,GAAG,iBAAiB,KAAK,qBAAqB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,mC;;;;;;AChNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,mC;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA,eAAc,gBAAgB,sCAAsC,iBAAiB,EAAE;AACvF,8BAA6B,uDAAuD;AACpF;AACA;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,+BAA8B,aAAa;AAC3C,+BAA8B,aAAa;AAC3C,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,oBAAoB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,oBAAoB;AAC/D;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,wCAAwC;AACzmC;;;;;;ACzVA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA,wCAAuC,SAAS;AAChD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,yDAAwD,uCAAuC;AAC/F,uDAAsD,qCAAqC;;AAE3F;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAE;AACF,EAAC;;AAED;;;;;;;AC7EA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAAyB;;AAEzB;;AAEA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAqC,SAAS;AAC9C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;AC/FA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,0BAAyB,IAAI;AAC7B,yBAAwB,EAAE,WAAW,EAAE;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,cAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;;AAEA,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF,cAAa,OAAO;AACpB;AACA;;AAEA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,GAAE;AACF;AACA;;AAEA,aAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;ACzOA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAmB;AACnB;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,cAAa,mBAAmB;AAChC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA,kBAAiB,cAAc;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA,sEAAqE,kCAAkC,EAAE;;AAEzG;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;;AAEA;AACA,kBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;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AC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,gBAAgB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,gBAAgB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,gBAAggBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,mC;;;;;;ACvcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,oD;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,2C;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,4C;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,2BAA2B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,gBAAgB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,kD;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAcsBAAqB,yBAAyB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,sC;;;;;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,0BAAyB,uDAAuD;AAChF;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA,EAAC;AACD,+CAA8C,cAAc;AAC5D;AACA,oDAAmD,gBAAgB,QAAQ,yBAAyB;AACpG;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,6C;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,EAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,oD;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,cAAc;AAC5D;AACA,yBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,gBAAgB;AAChC;AACA,6CAA4C,gBAAgB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,gBAAgB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,0C","file":"dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1fd29e56c97d9c46d916","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./core/Component\"));\r\n__export(require(\"./core/Engine\"));\r\n__export(require(\"./core/Entity\"));\r\n__export(require(\"./core/EntitySystem\"));\r\n__export(require(\"./core/Family\"));\r\n__export(require(\"./core/UniqueType\"));\r\n__export(require(\"./systems/IntervalIteratingSystem\"));\r\n__export(require(\"./systems/IntervalSystem\"));\r\n__export(require(\"./systems/IteratingSystem\"));\r\n__export(require(\"./systems/SortedIteratingSystem\"));\r\n__export(require(\"./utils/Bits\"));\r\n__export(require(\"./utils/Blueprint\"));\r\n__export(require(\"./utils/ComponentFactory\"));\r\n__export(require(\"./utils/Constructor\"));\r\n__export(require(\"./utils/EntityFactory\"));\r\n__export(require(\"./utils/Lookup\"));\r\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/index.js\n// module id = 1\n// module chunks = 0","import { Component } from 'typed-ecstasy'\r\n\r\nexport class PositionComponent extends Component {\r\n\r\n    x: number = 0\r\n    y: number = 0\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/PositionComponent.ts","import { Component } from 'typed-ecstasy'\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Component that defines an entity as the snake head. It links to the snake tail.\r\n */\r\nexport class SnakeHeadComponent extends Component {\r\n\r\n    constructor(\r\n        public tailId: number = 0,\r\n        public isAlive: boolean = true,\r\n        public length: number = 0\r\n    ) {\r\n        super()\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/SnakeHeadComponent.ts","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Base class for all systems. An EntitySystem is intended to process entities.\r\n */\r\nvar EntitySystem = /** @class */ (function () {\r\n    /**\r\n     * @param priority The priority to execute this system with (lower means higher priority).\r\n     */\r\n    function EntitySystem(priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this.processing = true;\r\n        this.engine = null;\r\n        this.priority = priority;\r\n    }\r\n    /** @return Whether or not the system should be processed. */\r\n    EntitySystem.prototype.checkProcessing = function () {\r\n        return this.processing;\r\n    };\r\n    /**\r\n     * Sets whether or not the system should be processed by the Engine.\r\n     *\r\n     * @param processing true to enable, false to disable processing\r\n     */\r\n    EntitySystem.prototype.setProcessing = function (processing) {\r\n        this.processing = processing;\r\n    };\r\n    /** @return The priority of the system */\r\n    EntitySystem.prototype.getPriority = function () {\r\n        return this.priority;\r\n    };\r\n    /**\r\n     * Use this to set the priority of the system. Lower means it'll get executed first.\r\n     *\r\n     * @param priority the new priority\r\n     */\r\n    EntitySystem.prototype.setPriority = function (priority) {\r\n        this.priority = priority;\r\n        if (this.engine)\r\n            this.engine.sortSystems();\r\n    };\r\n    /** @return The engine */\r\n    EntitySystem.prototype.getEngine = function () { return this.engine; };\r\n    /**\r\n     * Called when this EntitySystem is added to an Engine.\r\n     *\r\n     * @param engine The Engine this system was added to.\r\n     */\r\n    EntitySystem.prototype.addedToEngine = function (engine) {\r\n        this.engine = engine;\r\n    };\r\n    /**\r\n     * Called when this EntitySystem is removed from an Engine.\r\n     *\r\n     * @param engine The Engine the system was removed from.\r\n     */\r\n    EntitySystem.prototype.removedFromEngine = function (engine) {\r\n        this.engine = null;\r\n    };\r\n    return EntitySystem;\r\n}());\r\nexports.EntitySystem = EntitySystem;\r\n//# sourceMappingURL=EntitySystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/EntitySystem.js\n// module id = 4\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2014 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constructor_1 = require(\"../utils/Constructor\");\r\nvar classCounters = {};\r\n/**\r\n * Uniquely identifies a sub-class. It assigns them an index which is used internally for fast comparison and\r\n * retrieval. UniqueType is a package protected class. You cannot instantiate a UniqueType.\r\n * They can only be accessed via {@link #getIndexForClass(clazz)}. Each class will always\r\n * return the same instance of UniqueType.\r\n */\r\nvar UniqueType = /** @class */ (function () {\r\n    function UniqueType(index, group) {\r\n        this.index = index;\r\n        this.group = group;\r\n    }\r\n    /** @return This UniqueType's group */\r\n    UniqueType.prototype.getGroup = function () {\r\n        return this.group;\r\n    };\r\n    /** @return This UniqueType's unique index */\r\n    UniqueType.prototype.getIndex = function () {\r\n        return this.index;\r\n    };\r\n    /**\r\n     * @param clazz The class constructor\r\n     * @return A UniqueType matching the Class\r\n     */\r\n    UniqueType.getForInstance = function (inst) {\r\n        return UniqueType.getForClass(Constructor_1.Constructor.getFor(inst));\r\n    };\r\n    /**\r\n     * @param clazz The class constructor\r\n     * @return A UniqueType matching the Class\r\n     */\r\n    UniqueType.generateFor = function (clazz) {\r\n        var baseClassName = Constructor_1.Constructor.getBaseClass(clazz).name;\r\n        if (!baseClassName)\r\n            throw \"Could not get base class for \" + clazz.toString();\r\n        if (!classCounters.hasOwnProperty(baseClassName))\r\n            classCounters[baseClassName] = 0;\r\n        var index = classCounters[baseClassName]++;\r\n        return clazz.__uniqueType = new UniqueType(index, baseClassName);\r\n    };\r\n    /**\r\n     * @param clazz The class constructor\r\n     * @return A UniqueType matching the Class\r\n     */\r\n    UniqueType.getForClass = function (clazz) {\r\n        return clazz && (clazz.__uniqueType || UniqueType.generateFor(clazz));\r\n    };\r\n    /**\r\n     * @param clazzes list of class constructors\r\n     * @return Bits representing the collection of classes for quick comparison and matching.\r\n     */\r\n    UniqueType.getBitsForClasses = function (destination) {\r\n        var clazzes = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            clazzes[_i - 1] = arguments[_i];\r\n        }\r\n        for (var _a = 0, clazzes_1 = clazzes; _a < clazzes_1.length; _a++) {\r\n            var clazz = clazzes_1[_a];\r\n            destination.set(UniqueType.getForClass(clazz).getIndex());\r\n        }\r\n        return destination;\r\n    };\r\n    /** @return a hashcode to identify this type */\r\n    UniqueType.prototype.hashCode = function () {\r\n        return this.group + this.index;\r\n    };\r\n    /**\r\n     * Compare with another type.\r\n     *\r\n     * @param other the other type\r\n     * @return true if the types are equal.\r\n     */\r\n    UniqueType.prototype.equals = function (other) {\r\n        if (this === other)\r\n            return true;\r\n        if (this.group !== other.group)\r\n            return false;\r\n        return this.index === other.index;\r\n    };\r\n    return UniqueType;\r\n}());\r\nexports.UniqueType = UniqueType;\r\n//# sourceMappingURL=UniqueType.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/UniqueType.js\n// module id = 5\n// module chunks = 0","import { Entity } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { PlayField } from './PlayField'\r\nimport { IVec2 } from './Vector'\r\n\r\nexport function setEntityPosition( playField: PlayField, entity: Entity, pos: IVec2 ) {\r\n\r\n    pos = { x: Math.trunc( pos.x ), y: Math.trunc( pos.y ) }\r\n\r\n    const posComponent = entity.get( PositionComponent )\r\n    if( !posComponent ) {\r\n        throw new Error( \"Entity cannot be inserted in playfield because it does not contain PositionComponent\" )\r\n    }\r\n\r\n    // Remove entity from current cell (if any)\r\n    playField.removeEntity( posComponent, entity.getId() )\r\n\r\n    // Insert entity in new cell\r\n    playField.insertEntity( pos, entity.getId() )\r\n\r\n    // Update entity position\r\n    posComponent.x = pos.x\r\n    posComponent.y = pos.y\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/common/SetEntityPosition.ts","import { Component } from 'typed-ecstasy'\r\nimport { IVec2 } from '../common/Vector'\r\n\r\nexport enum Direction {\r\n    none, right, left, up, down\r\n}\r\n\r\nexport class DirectionComponent extends Component {\r\n\r\n    constructor( public value: Direction = Direction.none ) {\r\n        super()\r\n    }\r\n}\r\n\r\nexport class RequestedDirectionComponent extends Component {\r\n\r\n    constructor( public value: Direction = Direction.none ) {\r\n        super()\r\n    }\r\n}\r\n\r\nexport function directionToVec2( dir: Direction ): IVec2 {\r\n\r\n    let result = { x: 0, y: 0 }\r\n\r\n    switch( dir ) {\r\n        case Direction.right: result.x = 1; break\r\n        case Direction.left: result.x = -1; break\r\n        case Direction.down: result.y = 1; break\r\n        case Direction.up: result.y = -1; break\r\n    }\r\n    return result\r\n}\r\n\r\nexport function randomDirection(): Direction {\r\n    return <Direction>Math.trunc( 1 + Math.random() * 4 )\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/DirectionComponent.ts","import { Engine, Component, Entity } from 'typed-ecstasy'\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Component that defines connection between snake segments.\r\n */\r\nexport class DoubleLinkComponent extends Component {\r\n\r\n    constructor(\r\n        public prevId: number | null = null,  // previous entity (towards tail)\r\n        public nextId: number | null = null  // next entity (towards head)\r\n    ) {\r\n        super()\r\n    }\r\n}\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Append entity to list.\r\n */\r\n\r\nexport function appendEntityToDoubleLinkedList( current: Entity, toAppend: Entity ) {\r\n\r\n    const currentLink = current.get( DoubleLinkComponent )!\r\n    const toAppendLink = toAppend.get( DoubleLinkComponent )!\r\n\r\n    currentLink.nextId = toAppend.getId()\r\n    toAppendLink.prevId = current.getId()\r\n}\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Insert entity before given entity.\r\n */\r\n\r\nexport function insertEntityInDoubleLinkedList( ecs: Engine, toInsert: Entity, insertBefore: Entity ) {\r\n\r\n    const toInsertLink = toInsert.get( DoubleLinkComponent )!\r\n\r\n    const insertBeforeLink = insertBefore.get( DoubleLinkComponent )!\r\n\r\n    if( insertBeforeLink.prevId ) {\r\n        const insertAfter = ecs.getEntity( insertBeforeLink.prevId )!\r\n        const insertAfterLink = insertAfter.get( DoubleLinkComponent )!\r\n        insertAfterLink.nextId = toInsert.getId()\r\n\r\n        toInsertLink.prevId = insertAfter.getId()\r\n    }\r\n\r\n    insertBeforeLink.prevId = toInsert.getId()\r\n\r\n    toInsertLink.nextId = insertBefore.getId()\r\n}\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Remove last entity from list and return new last entity.\r\n */\r\n\r\nexport function removeLastEntityFromDoubleLinkedList( ecs: Engine, lastEntity: Entity ): Entity | null {\r\n\r\n    const lastEntityLink = lastEntity.get( DoubleLinkComponent )!\r\n\r\n    if( lastEntityLink.nextId ) {\r\n        const newLastEntity = ecs.getEntity( lastEntityLink.nextId )!\r\n        const newLastEntityLink = newLastEntity.get( DoubleLinkComponent )!\r\n        newLastEntityLink.prevId = null\r\n\r\n        lastEntityLink.nextId = null\r\n\r\n        return newLastEntity\r\n    }\r\n\r\n    return null\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/DoubleLinkComponent.ts","import { Component } from 'typed-ecstasy'\r\n\r\n/**\r\n * Component for actors that can eat something. The stomach member defines how much the actor has eaten, but not digested yet.\r\n */\r\nexport class FeedableComponent extends Component {\r\n\r\n    constructor( public stomach: number = 0 ) {\r\n        super()\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/FeedableComponent.ts","import { Component } from 'typed-ecstasy'\r\n\r\n// Nutrition value of snake food. Positive value makes snake grow, negative value shortens it.\r\nexport class NutritionComponent extends Component {\r\n\r\n    constructor( public value: number = 1 ) {\r\n        super()\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/FoodComponents.ts","import { Component } from 'typed-ecstasy'\r\n\r\nexport class ObstacleComponent extends Component {\r\n    // doesn't have any data, just tags entities\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/ObstacleComponent.ts","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n *  A bitset, without size limitation, allows comparison via bitwise operators to other bitfields.\r\n */\r\nvar Bits = /** @class */ (function () {\r\n    /**\r\n     * Creates a bit set whose initial size is large enough to explicitly represent bits with indices in the range 0 through nbits-1.\r\n     *\r\n     * @param nbits the initial size of the bit set\r\n     */\r\n    function Bits(nbits) {\r\n        if (nbits === void 0) { nbits = 64; }\r\n        this.data = new Int32Array(Math.max(2, Math.ceil(nbits / 32)));\r\n    }\r\n    /**\r\n     * @param index the index of the bit\r\n     * @return Whether the bit is set\r\n     */\r\n    Bits.prototype.get = function (index) {\r\n        var word = index >> 5;\r\n        if (word >= this.data.length)\r\n            return false;\r\n        return (this.data[word] & (1 << (index & 0x1F))) !== 0;\r\n    };\r\n    /**\r\n     * Returns the bit at the given index and clears it in one go.\r\n     *\r\n     * @param index the index of the bit\r\n     * @return Whether the bit was set before invocation\r\n     */\r\n    Bits.prototype.getAndClear = function (index) {\r\n        var word = index >> 5;\r\n        if (word >= this.data.length)\r\n            return false;\r\n        var oldData = this.data[word];\r\n        this.data[word] &= ~(1 << (index & 0x1F));\r\n        return this.data[word] !== oldData;\r\n    };\r\n    /**\r\n     * Returns the bit at the given index and sets it in one go.\r\n     *\r\n     * @param index the index of the bit\r\n     * @return Whether the bit was set before invocation\r\n     */\r\n    Bits.prototype.getAndSet = function (index) {\r\n        var word = index >> 5;\r\n        this.checkCapacity(word);\r\n        var oldData = this.data[word];\r\n        this.data[word] |= 1 << (index & 0x1F);\r\n        return this.data[word] === oldData;\r\n    };\r\n    /** @param index the index of the bit to set */\r\n    Bits.prototype.set = function (index) {\r\n        var word = index >> 5;\r\n        this.checkCapacity(word);\r\n        this.data[word] |= 1 << (index & 0x1F);\r\n    };\r\n    /** Sets the entire bitset */\r\n    Bits.prototype.setAll = function () {\r\n        this.data.fill(-1);\r\n    };\r\n    /** @param index the index of the bit to flip */\r\n    Bits.prototype.flip = function (index) {\r\n        var word = index >> 5;\r\n        this.checkCapacity(word);\r\n        this.data[word] ^= 1 << (index & 0x1F);\r\n    };\r\n    Bits.prototype.checkCapacity = function (len) {\r\n        if (len >= this.data.length) {\r\n            var data = new Int32Array(len + 1);\r\n            data.set(this.data);\r\n            this.data = data;\r\n        }\r\n    };\r\n    /** @param index the index of the bit to clear */\r\n    Bits.prototype.clear = function (index) {\r\n        var word = index >> 5;\r\n        if (word >= this.data.length)\r\n            return;\r\n        this.data[word] &= ~(1 << (index & 0x1F));\r\n    };\r\n    /** Clears the entire bitset */\r\n    Bits.prototype.clearAll = function () {\r\n        this.data.fill(0);\r\n    };\r\n    /** @return The number of bits currently stored, **not** the highset set bit! */\r\n    Bits.prototype.numBits = function () {\r\n        return this.data.length << 5;\r\n    };\r\n    /** @return The minimal number of words to store all the bits */\r\n    Bits.prototype.usedWords = function () {\r\n        for (var word = this.data.length - 1; word >= 0; --word) {\r\n            var dataAtWord = this.data[word];\r\n            if (dataAtWord !== 0)\r\n                return word + 1;\r\n        }\r\n        return 0;\r\n    };\r\n    /**\r\n     * Returns the \"logical size\" of this bitset: The index of the highest set bit in the bitset plus one.\r\n     * Returns zero if the bitset contains no set bits.\r\n     *\r\n     * @return The logical size of this bitset\r\n     */\r\n    Bits.prototype.length = function () {\r\n        for (var word = this.data.length - 1; word >= 0; --word) {\r\n            var dataAtWord = this.data[word];\r\n            if (dataAtWord !== 0) {\r\n                for (var bit = 31; bit >= 0; --bit) {\r\n                    if ((dataAtWord & (1 << (bit & 0x1F))) !== 0) {\r\n                        return (word << 5) + bit + 1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    };\r\n    /** @return true if this bitset contains no bits that are set to true */\r\n    Bits.prototype.isEmpty = function () {\r\n        var length = this.data.length;\r\n        for (var i = 0; i < length; i++) {\r\n            if (this.data[i] !== 0) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Returns the index of the first bit that is set to true that occurs on or after the specified starting index.\r\n     *\r\n     * @param fromIndex the index to start looking\r\n     * @return *>= 0* if a truthy bit was found, *-1* otherwise.\r\n     */\r\n    Bits.prototype.nextSetBit = function (fromIndex) {\r\n        var word = fromIndex >> 5;\r\n        if (word >= this.data.length)\r\n            return -1;\r\n        var dataAtWord = this.data[word];\r\n        if (dataAtWord !== 0) {\r\n            for (var i = fromIndex & 0x1f; i < 32; i++) {\r\n                if ((dataAtWord & (1 << (i & 0x1F))) !== 0) {\r\n                    return (word << 5) + i;\r\n                }\r\n            }\r\n        }\r\n        for (word++; word < this.data.length; word++) {\r\n            dataAtWord = this.data[word];\r\n            if (dataAtWord !== 0) {\r\n                for (var i = 0; i < 32; i++) {\r\n                    if ((dataAtWord & (1 << (i & 0x1F))) !== 0) {\r\n                        return (word << 5) + i;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * Returns the index of the first bit that is set to false that occurs on or after the specified starting index.\r\n     *\r\n     * @param fromIndex the index to start looking\r\n     * @return *>= 0* if a falsy bit was found, *-1* otherwise.\r\n     */\r\n    Bits.prototype.nextClearBit = function (fromIndex) {\r\n        var word = fromIndex >> 5;\r\n        if (word >= this.data.length)\r\n            return this.data.length << 5;\r\n        var dataAtWord = this.data[word];\r\n        for (var i = fromIndex & 0x1f; i < 32; i++) {\r\n            if ((dataAtWord & (1 << (i & 0x1F))) === 0) {\r\n                return (word << 5) + i;\r\n            }\r\n        }\r\n        for (word++; word < this.data.length; word++) {\r\n            dataAtWord = this.data[word];\r\n            for (var i = 0; i < 32; i++) {\r\n                if ((dataAtWord & (1 << (i & 0x1F))) === 0) {\r\n                    return (word << 5) + i;\r\n                }\r\n            }\r\n        }\r\n        return this.data.length << 5;\r\n    };\r\n    /**\r\n     * Performs a logical **AND** of this target bit set with the argument bit set. This bit set is modified so\r\n     * that each bit in  it has the value true if and only if it both initially had the value true and the\r\n     * corresponding bit in the bit set argument also had the value true.\r\n     *\r\n     * @param other The other instance\r\n     * @return this\r\n     */\r\n    Bits.prototype.and = function (other) {\r\n        var commonWords = Math.min(this.data.length, other.data.length);\r\n        for (var i = 0; commonWords > i; i++) {\r\n            this.data[i] &= other.data[i];\r\n        }\r\n        if (this.data.length > commonWords) {\r\n            for (var i = commonWords, s = this.data.length; s > i; i++) {\r\n                this.data[i] = 0;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Clears all of the bits in this instance whose corresponding bit is set in the other instance.\r\n     *\r\n     * @param other The other instance\r\n     */\r\n    Bits.prototype.andNot = function (other) {\r\n        for (var i = 0, j = this.data.length, k = other.data.length; i < j && i < k; i++) {\r\n            this.data[i] &= ~other.data[i];\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Performs a logical **OR** of this instance with the other instance. This instance is modified so that a\r\n     * bit in it has the value true if and only if it either already had the value true or the corresponding bit in\r\n     * the other instance has the value true.\r\n     *\r\n     * @param other a bit set\r\n     * @return this\r\n     */\r\n    Bits.prototype.or = function (other) {\r\n        var commonWords = Math.min(this.data.length, other.data.length);\r\n        for (var i = 0; commonWords > i; i++) {\r\n            this.data[i] |= other.data[i];\r\n        }\r\n        if (commonWords < other.data.length) {\r\n            this.checkCapacity(other.data.length);\r\n            for (var i = commonWords, s = other.data.length; s > i; i++) {\r\n                this.data[i] = other.data[i];\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Performs a logical **XOR** of this bit set with the bit set argument. This bit set is modified so that a\r\n     * bit in it has the value true if and only if one of the following statements holds:\r\n     *\r\n     * - The bit initially has the value true, and the corresponding bit in the argument has the value false.\r\n     * - The bit initially has the value false, and the corresponding bit in the argument has the value true.\r\n     *\r\n     * @param other The other instance\r\n     * @return this\r\n     */\r\n    Bits.prototype.xor = function (other) {\r\n        var commonWords = Math.min(this.data.length, other.data.length);\r\n        for (var i = 0; commonWords > i; i++) {\r\n            this.data[i] ^= other.data[i];\r\n        }\r\n        if (commonWords < other.data.length) {\r\n            this.checkCapacity(other.data.length);\r\n            for (var i = commonWords, s = other.data.length; s > i; i++) {\r\n                this.data[i] = other.data[i];\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns true if the other instance has any bits set to true that are also set to true in this instance.\r\n     *\r\n     * @param other The other instance\r\n     * @return true if this bit set intersects the specified bit set\r\n     */\r\n    Bits.prototype.intersects = function (other) {\r\n        for (var i = Math.min(this.data.length, other.data.length) - 1; i >= 0; i--) {\r\n            if ((this.data[i] & other.data[i]) !== 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Returns true if this instance is a super set of the other instance, i.e. it has all bits set to true that are\r\n     *  also set to true in the other instance.\r\n     *\r\n     * @param other The other instance\r\n     * @return true if this bit set is a super set of the specified set\r\n     */\r\n    Bits.prototype.containsAll = function (other) {\r\n        for (var i = this.data.length; i < other.data.length; i++) {\r\n            if (other.data[i] !== 0) {\r\n                return false;\r\n            }\r\n        }\r\n        for (var i = Math.min(this.data.length, other.data.length) - 1; i >= 0; i--) {\r\n            if ((this.data[i] & other.data[i]) !== other.data[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /** @return All numbers as string, comma separated */\r\n    Bits.prototype.getStringId = function () {\r\n        return this.data.slice(0, this.usedWords()).join(',');\r\n    };\r\n    /**\r\n     * Compare with another set of bits.\r\n     *\r\n     * @param other the bits to compare with\r\n     * @return true if all bits match\r\n     */\r\n    Bits.prototype.equals = function (other) {\r\n        if (this === other)\r\n            return true;\r\n        var commonWords = Math.min(this.data.length, other.data.length);\r\n        for (var i = 0; commonWords > i; i++) {\r\n            if (this.data[i] !== other.data[i])\r\n                return false;\r\n        }\r\n        if (this.data.length === other.data.length)\r\n            return true;\r\n        return this.length() === other.length();\r\n    };\r\n    return Bits;\r\n}());\r\nexports.Bits = Bits;\r\n//# sourceMappingURL=Bits.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/Bits.js\n// module id = 12\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Constructor;\r\n(function (Constructor) {\r\n    /**\r\n     * Get the lowest constructor in a class hierarchy.\r\n     *\r\n     * @param clazz The class to use as a starting point.\r\n     * @return The lowest constructor in the class hierarchy\r\n     */\r\n    function getBaseClass(clazz) {\r\n        var base = Object.getPrototypeOf(clazz);\r\n        while (base.name) {\r\n            clazz = base;\r\n            base = Object.getPrototypeOf(clazz);\r\n        }\r\n        return clazz;\r\n    }\r\n    Constructor.getBaseClass = getBaseClass;\r\n    /**\r\n     * Get the constructor for a specified instance\r\n     *\r\n     * @param inst the instance to get the constructor for\r\n     * @return the constructor.\r\n     */\r\n    function getFor(inst) {\r\n        return Object.getPrototypeOf(inst).constructor;\r\n    }\r\n    Constructor.getFor = getFor;\r\n})(Constructor = exports.Constructor || (exports.Constructor = {}));\r\n//# sourceMappingURL=Constructor.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/Constructor.js\n// module id = 13\n// module chunks = 0","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-convert/conversions.js\n// module id = 14\n// module chunks = 0","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-name/index.js\n// module id = 15\n// module chunks = 0","import { LayeredHtmlElements, switchHtmlLayer } from './LayeredGui'\r\n\r\nexport enum GameLayerId {\r\n    Menu,\r\n    Game,\r\n    GameOver\r\n}\r\n\r\nexport type GameGui = LayeredHtmlElements<GameLayerId>\r\n\r\nexport {\r\n    switchHtmlLayer\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/common/GameGui.ts","export interface IVec2 {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nexport interface ISize {\r\n    width: number\r\n    height: number\r\n}\r\n\r\nexport function vec2add( v1: IVec2, v2: IVec2 ): IVec2 {\r\n    return { x: v1.x + v2.x, y: v1.y + v2.y }\r\n}\r\n\r\nexport function vec2sub( v1: IVec2, v2: IVec2 ): IVec2 {\r\n    return { x: v1.x - v2.x, y: v1.y - v2.y }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/common/Vector.ts","import { Component } from 'typed-ecstasy'\r\n\r\nexport class WallComponent extends Component {\r\n    // doesn't have any data, just tags entities\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/components/WallComponent.ts","import { Engine as ECS, Entity } from 'typed-ecstasy'\r\nimport { SnakeHeadComponent } from '../components/SnakeHeadComponent'\r\nimport { DoubleLinkComponent, appendEntityToDoubleLinkedList } from '../components/DoubleLinkComponent'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { DirectionComponent, RequestedDirectionComponent, Direction, directionToVec2, randomDirection } from '../components/DirectionComponent'\r\nimport { FeedableComponent } from '../components/FeedableComponent'\r\nimport { setEntityPosition } from '../common/SetEntityPosition'\r\nimport { PlayField } from '../common/PlayField'\r\nimport { IVec2, vec2add, vec2sub } from '../common/Vector'\r\nimport { ObstacleComponent } from '../components/ObstacleComponent'\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Create initial snake consisting of three segments (head, middle and tail).\r\n */\r\nexport function createAndAddSnake(\r\n    ecs: ECS, playField: PlayField, position: IVec2, direction: Direction = randomDirection() ) {\r\n\r\n    const directionVec = directionToVec2( direction )\r\n\r\n    const snakeTail = createSnakeSegment( ecs, playField, vec2sub( position, directionVec ) )\r\n\r\n    const snakeMiddle = createSnakeSegment( ecs, playField, position )\r\n\r\n    const snakeHead = createSnakeHead( ecs, playField, vec2add( position, directionVec ), snakeTail, direction, 3 )\r\n\r\n    appendEntityToDoubleLinkedList( snakeTail, snakeMiddle )\r\n    appendEntityToDoubleLinkedList( snakeMiddle, snakeHead )\r\n}\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Create a snake segment.\r\n */\r\nexport function createSnakeSegment(\r\n    ecs: ECS, playField: PlayField, position: IVec2 | null = null ): Entity {\r\n\r\n    const result = ecs.createEntity()\r\n\r\n    result.add( new PositionComponent )\r\n    result.add( new DoubleLinkComponent )\r\n    result.add( new ObstacleComponent )  // to detect collision with itself\r\n\r\n    ecs.addEntity( result )\r\n\r\n    if( position !== null ) {\r\n        setEntityPosition( playField, result, position )\r\n    }\r\n\r\n    return result\r\n}\r\n\r\n//--------------------------------------------------------------------------------------------------------\r\n/**\r\n * Create a snake head.\r\n */\r\nexport function createSnakeHead(\r\n    ecs: ECS, playField: PlayField, position: IVec2 | null = null, snakeTail: Entity, direction: Direction, length: number ): Entity {\r\n\r\n    const result = ecs.createEntity()\r\n\r\n    result.add( new PositionComponent )\r\n    result.add( new DoubleLinkComponent )\r\n    result.add( new SnakeHeadComponent( snakeTail.getId(), true, length ) )\r\n    result.add( new DirectionComponent( direction ) )\r\n    result.add( new RequestedDirectionComponent )\r\n    result.add( new FeedableComponent )\r\n\r\n    ecs.addEntity( result )\r\n\r\n    if( position !== null ) {\r\n        setEntityPosition( playField, result, position )\r\n    }\r\n\r\n    return result\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/factories/SnakeFactory.ts","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2015 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Bits_1 = require(\"../utils/Bits\");\r\nvar UniqueType_1 = require(\"./UniqueType\");\r\n/**\r\n * Simple containers of {@link Component Components} that give them \"data\".\r\n * The component's data is then processed by {@link EntitySystem}s.\r\n */\r\nvar Entity = /** @class */ (function () {\r\n    function Entity() {\r\n        /** A flag that can be used to bit mask this entity. Up to the user to manage. */\r\n        this.flags = 0;\r\n        this.uuid = 0;\r\n        this.scheduledForRemoval = false;\r\n        this.componentsByType = {};\r\n        this.components = [];\r\n        this.componentBits = new Bits_1.Bits();\r\n        this.familyBits = new Bits_1.Bits();\r\n        this.engine = null;\r\n    }\r\n    /** @return The Entity's unique id. */\r\n    Entity.prototype.getId = function () { return this.uuid; };\r\n    /** @return true if the entity is valid (added to the engine). */\r\n    Entity.prototype.isValid = function () { return this.uuid > 0; };\r\n    /** @return true if the entity is scheduled to be removed */\r\n    Entity.prototype.isScheduledForRemoval = function () { return this.scheduledForRemoval; };\r\n    /** Remove this entity from its engine */\r\n    Entity.prototype.destroy = function () {\r\n        if (this.engine)\r\n            this.engine.removeEntity(this);\r\n    };\r\n    /**\r\n     * Add a component. This will be freed on removal. Prefer add() instead\r\n     *\r\n     * @typeparam T The component class\r\n     * @param component the component to add\r\n     * @return The added component\r\n     */\r\n    Entity.prototype.add = function (component) {\r\n        if (this.addInternal(component) && this.engine)\r\n            this.engine.requestFamilyUpdate(this);\r\n        return component;\r\n    };\r\n    /**\r\n     * Removes the Component of the specified type. Since there is only ever one Component of one type, we don't\r\n     * need an instance reference.\r\n     *\r\n     * @param clazz The Component class\r\n     */\r\n    Entity.prototype.remove = function (clazz) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        if (this.removeInternal(type) && this.engine)\r\n            this.engine.requestFamilyUpdate(this);\r\n    };\r\n    /** Removes all the {@link Component}s from the Entity. */\r\n    Entity.prototype.removeAll = function () {\r\n        if (this.removeAllInternal() && this.engine)\r\n            this.engine.requestFamilyUpdate(this);\r\n    };\r\n    /** @return A list with all the {@link Component}s of this Entity. */\r\n    Entity.prototype.getAll = function () {\r\n        return this.components;\r\n    };\r\n    /**\r\n     * Retrieve a Component from this Entity by class.\r\n     *\r\n     * @typeparam T The component class\r\n     * @param clazz The Component class\r\n     * @return The instance of the specified Component attached to this Entity, or null if no such Component exists.\r\n     */\r\n    Entity.prototype.get = function (clazz) {\r\n        return (this.getComponent(UniqueType_1.UniqueType.getForClass(clazz)));\r\n    };\r\n    /**\r\n     * @param clazz The Component class\r\n     * @return Whether or not the Entity has a Component for the specified class.\r\n     */\r\n    Entity.prototype.has = function (clazz) {\r\n        return this.componentBits.get(UniqueType_1.UniqueType.getForClass(clazz).getIndex());\r\n    };\r\n    /** @return The Component object for the specified class, null if the Entity does not have any components for that class. */\r\n    Entity.prototype.getComponent = function (uniqueType) {\r\n        var index = uniqueType.getIndex();\r\n        return this.componentsByType[index] || null;\r\n    };\r\n    Entity.prototype.addInternal = function (component) {\r\n        var type = UniqueType_1.UniqueType.getForInstance(component);\r\n        var oldComponent = this.getComponent(type);\r\n        if (component === oldComponent)\r\n            return false;\r\n        if (oldComponent != null)\r\n            this.removeInternal(type);\r\n        var typeIndex = type.getIndex();\r\n        this.componentsByType[typeIndex] = component;\r\n        this.components.push(component);\r\n        this.componentBits.set(typeIndex);\r\n        return true;\r\n    };\r\n    Entity.prototype.removeInternal = function (type) {\r\n        var index = type.getIndex();\r\n        var component = this.componentsByType[index];\r\n        if (component) {\r\n            delete this.componentsByType[index];\r\n            var index2 = this.components.indexOf(component);\r\n            this.components.splice(index2, 1);\r\n            this.componentBits.clear(index);\r\n            // component.onDestruct();\r\n        }\r\n        return component;\r\n    };\r\n    Entity.prototype.removeAllInternal = function () {\r\n        if (this.components.length) {\r\n            while (this.components.length)\r\n                this.removeInternal(UniqueType_1.UniqueType.getForInstance(this.components[0]));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /** @return This Entity's Component bits, describing all the {@link Component}s it contains. */\r\n    Entity.prototype.getComponentBits = function () {\r\n        return this.componentBits;\r\n    };\r\n    /** @return This Entity's Family bits, describing all the {@link EntitySystem}s it currently is being processed by. */\r\n    Entity.prototype.getFamilyBits = function () {\r\n        return this.familyBits;\r\n    };\r\n    return Entity;\r\n}());\r\nexports.Entity = Entity;\r\n//# sourceMappingURL=Entity.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/Entity.js\n// module id = 20\n// module chunks = 0","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*******************************************************************************\r\n * Copyright 2015 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nvar UniqueType_1 = require(\"./UniqueType\");\r\nvar Bits_1 = require(\"../utils/Bits\");\r\nfunction addBitsString(ss, prefix, bits) {\r\n    ss.push(prefix);\r\n    ss.push(bits.getStringId());\r\n    ss.push(\";\");\r\n}\r\nfunction getFamilyHash(all, one, exclude) {\r\n    var ss = [];\r\n    if (!all.isEmpty())\r\n        addBitsString(ss, \"a:\", all);\r\n    if (!one.isEmpty())\r\n        addBitsString(ss, \"o:\", one);\r\n    if (!exclude.isEmpty())\r\n        addBitsString(ss, \"e:\", exclude);\r\n    return ss.join('');\r\n}\r\nvar families = {};\r\nvar familiesByIndex = [];\r\n/**\r\n * A builder pattern to create Family objects.\r\n * Use Family.all(), Family.one() or Family.exclude() to start\r\n *\r\n * Example usage:\r\n *```typescript\r\n *let family = Family.all(ComponentA, ComponentB).one(ComponentC, ComponentD).exclude(ComponentE).get();\r\n *```\r\n */\r\nvar FamilyBuilder = /** @class */ (function () {\r\n    function FamilyBuilder() {\r\n        this.m_all = new Bits_1.Bits();\r\n        this.m_one = new Bits_1.Bits();\r\n        this.m_exclude = new Bits_1.Bits();\r\n    }\r\n    /**\r\n     * Resets the builder instance\r\n     *\r\n     * @return this for chaining\r\n     */\r\n    FamilyBuilder.prototype.reset = function () {\r\n        this.m_all.clearAll();\r\n        this.m_one.clearAll();\r\n        this.m_exclude.clearAll();\r\n        return this;\r\n    };\r\n    /**\r\n     * @param clazzes Entities of the family will have to contain all of the specified components.\r\n     * @return this for chaining\r\n     */\r\n    FamilyBuilder.prototype.all = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        UniqueType_1.UniqueType.getBitsForClasses.apply(UniqueType_1.UniqueType, [this.m_all].concat(clazzes));\r\n        return this;\r\n    };\r\n    /**\r\n     * @param clazzes Entities of the family will have to contain at least one of the specified components.\r\n     * @return this for chaining\r\n     */\r\n    FamilyBuilder.prototype.one = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        UniqueType_1.UniqueType.getBitsForClasses.apply(UniqueType_1.UniqueType, [this.m_one].concat(clazzes));\r\n        return this;\r\n    };\r\n    /**\r\n     * @param clazzes Entities of the family cannot contain any of the specified components.\r\n     * @return this for chaining\r\n     */\r\n    FamilyBuilder.prototype.exclude = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        UniqueType_1.UniqueType.getBitsForClasses.apply(UniqueType_1.UniqueType, [this.m_exclude].concat(clazzes));\r\n        return this;\r\n    };\r\n    /** @return A Family for the configured component types */\r\n    FamilyBuilder.prototype.get = function () {\r\n        var hash = getFamilyHash(this.m_all, this.m_one, this.m_exclude);\r\n        var family = families[hash];\r\n        if (!family) {\r\n            family = new FamilyImpl(this.m_all, this.m_one, this.m_exclude);\r\n            familiesByIndex.push(family);\r\n            families[hash] = family;\r\n            this.m_all = new Bits_1.Bits();\r\n            this.m_one = new Bits_1.Bits();\r\n            this.m_exclude = new Bits_1.Bits();\r\n        }\r\n        return family;\r\n    };\r\n    return FamilyBuilder;\r\n}());\r\nexports.FamilyBuilder = FamilyBuilder;\r\nvar builder = new FamilyBuilder();\r\nvar familyTypes = 0;\r\n/**\r\n * Represents a group of {@link Component}s. It is used to describe what Entity objects an EntitySystem should\r\n * process. Families can't be instantiated directly but must be accessed via a builder.\r\n * This is to avoid duplicate families that describe the same components\r\n * Start with {@link Family.all}, {@link Family.one} or {@link Family.exclude}.\r\n */\r\nvar Family = /** @class */ (function () {\r\n    function Family() {\r\n        this.uniqueType = new UniqueType_1.UniqueType(familyTypes++, 'Family');\r\n    }\r\n    /**\r\n     * @param clazzes Entities will have to contain all of the specified components.\r\n     * @return A builder singleton instance to get a Family\r\n     */\r\n    Family.all = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        return (_a = builder.reset()).all.apply(_a, clazzes);\r\n        var _a;\r\n    };\r\n    /**\r\n     * @param clazzes Entities will have to contain at least one of the specified components.\r\n     * @return A builder singleton instance to get a Family\r\n     */\r\n    Family.one = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        return (_a = builder.reset()).one.apply(_a, clazzes);\r\n        var _a;\r\n    };\r\n    /**\r\n     * @param clazzes Entities cannot contain any of the specified components.\r\n     * @return A builder singleton instance to get a Family\r\n     */\r\n    Family.exclude = function () {\r\n        var clazzes = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            clazzes[_i] = arguments[_i];\r\n        }\r\n        return (_a = builder.reset()).exclude.apply(_a, clazzes);\r\n        var _a;\r\n    };\r\n    /**\r\n     * Get a family by its index.\r\n     *\r\n     * @param index the index of the family\r\n     * @return The family or null if out of bounds\r\n     */\r\n    Family.getByIndex = function (index) {\r\n        if (index >= 0 && index < familiesByIndex.length)\r\n            return familiesByIndex[index];\r\n        return null;\r\n    };\r\n    return Family;\r\n}());\r\nexports.Family = Family;\r\nvar FamilyImpl = /** @class */ (function (_super) {\r\n    __extends(FamilyImpl, _super);\r\n    function FamilyImpl(all, one, exclude) {\r\n        var _this = _super.call(this) || this;\r\n        _this.m_all = all;\r\n        _this.m_one = one;\r\n        _this.m_exclude = exclude;\r\n        return _this;\r\n    }\r\n    FamilyImpl.prototype.matches = function (entity) {\r\n        var entityComponentBits = entity.getComponentBits();\r\n        if (!entityComponentBits.containsAll(this.m_all))\r\n            return false;\r\n        if (!this.m_one.isEmpty() && !this.m_one.intersects(entityComponentBits))\r\n            return false;\r\n        if (!this.m_exclude.isEmpty() && this.m_exclude.intersects(entityComponentBits))\r\n            return false;\r\n        return true;\r\n    };\r\n    return FamilyImpl;\r\n}(Family));\r\n//# sourceMappingURL=Family.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/Family.js\n// module id = 21\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar UniqueType_1 = require(\"../core/UniqueType\");\r\n/**\r\n * A lookup is used to store and retrieve instances bound to a specified class.\r\n */\r\nvar Lookup = /** @class */ (function () {\r\n    function Lookup() {\r\n        this.map = {};\r\n    }\r\n    /**\r\n     * Store an instance of a class\r\n     *\r\n     * @typeparam T The class used to get the instance later.\r\n     * @typeparam I The class of the instance.\r\n     * @param clazz The class used to get the instance later.\r\n     * @param instance The instance to store.\r\n     */\r\n    Lookup.prototype.put = function (clazz, instance) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        this.map[type.hashCode()] = instance;\r\n        return instance;\r\n    };\r\n    /**\r\n     * Get an instance of a class\r\n     *\r\n     * @typeparam T The class the instance was bound to.\r\n     * @param clazz The class the instance was bound to.\r\n     */\r\n    Lookup.prototype.get = function (clazz) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        return this.map[type.hashCode()] || null;\r\n    };\r\n    /**\r\n     * Check if an instance of the specified class exists.\r\n     *\r\n     * @typeparam T The class the instance was bound to.\r\n     * @param clazz The class the instance was bound to.\r\n     */\r\n    Lookup.prototype.has = function (clazz) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        return this.map.hasOwnProperty(type.hashCode());\r\n    };\r\n    /**\r\n     * Remove an instance of a class\r\n     *\r\n     * @typeparam T The class the instance was bound to.\r\n     * @param clazz The class the instance was bound to.\r\n     */\r\n    Lookup.prototype.remove = function (clazz) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        delete this.map[type.hashCode()];\r\n    };\r\n    return Lookup;\r\n}());\r\nexports.Lookup = Lookup;\r\n//# sourceMappingURL=Lookup.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/Lookup.js\n// module id = 22\n// module chunks = 0","\"use strict\";\r\n// CC0 Public Domain: http://creativecommons.org/publicdomain/zero/1.0/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    }\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * SignalLink implements a doubly-linked ring with nodes containing the signal handlers.\r\n */\r\nvar SignalLink = /** @class */ (function () {\r\n    function SignalLink(prev, next, order) {\r\n        if (prev === void 0) { prev = null; }\r\n        if (next === void 0) { next = null; }\r\n        if (order === void 0) { order = 0; }\r\n        this.enabled = true;\r\n        this.newLink = false;\r\n        this.callback = null;\r\n        this.prev = prev ? prev : this;\r\n        this.next = next ? next : this;\r\n        this.order = order;\r\n    }\r\n    SignalLink.prototype.isEnabled = function () {\r\n        return this.enabled && !this.newLink;\r\n    };\r\n    SignalLink.prototype.setEnabled = function (flag) {\r\n        this.enabled = flag;\r\n    };\r\n    SignalLink.prototype.unlink = function () {\r\n        this.callback = null;\r\n        this.next.prev = this.prev;\r\n        this.prev.next = this.next;\r\n    };\r\n    SignalLink.prototype.insert = function (callback, order) {\r\n        var after = this.prev;\r\n        while (after !== this) {\r\n            if (after.order <= order)\r\n                break;\r\n            after = after.prev;\r\n        }\r\n        var link = new SignalLink(after, after.next, order);\r\n        link.callback = callback;\r\n        after.next = link;\r\n        link.next.prev = link;\r\n        return link;\r\n    };\r\n    return SignalLink;\r\n}());\r\n/**\r\n * Implementation of SignalConnection, for internal use only.\r\n */\r\nvar SignalConnectionImpl = /** @class */ (function () {\r\n    /**\r\n     * @param head The head link of the signal.\r\n     * @param link The actual link of the connection.\r\n     */\r\n    function SignalConnectionImpl(head, link) {\r\n        this.link = link;\r\n    }\r\n    SignalConnectionImpl.prototype.disconnect = function () {\r\n        if (this.link !== null) {\r\n            this.link.unlink();\r\n            this.link = null;\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(SignalConnectionImpl.prototype, \"enabled\", {\r\n        get: function () {\r\n            return this.link !== null && this.link.isEnabled();\r\n        },\r\n        set: function (enable) {\r\n            if (this.link)\r\n                this.link.setEnabled(enable);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SignalConnectionImpl;\r\n}());\r\n/**\r\n * Represents a list of connections to a signal for easy disconnect.\r\n */\r\nvar SignalConnections = /** @class */ (function () {\r\n    function SignalConnections() {\r\n        this.list = [];\r\n    }\r\n    /**\r\n     * Add a connection to the list.\r\n     * @param connection\r\n     */\r\n    SignalConnections.prototype.add = function (connection) {\r\n        this.list.push(connection);\r\n    };\r\n    /**\r\n     * Disconnect all connections in the list and empty the list.\r\n     */\r\n    SignalConnections.prototype.disconnectAll = function () {\r\n        for (var _i = 0, _a = this.list; _i < _a.length; _i++) {\r\n            var connection = _a[_i];\r\n            connection.disconnect();\r\n        }\r\n        this.list = [];\r\n    };\r\n    return SignalConnections;\r\n}());\r\nexports.SignalConnections = SignalConnections;\r\n/**\r\n * A signal is a way to publish and subscribe to events.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n */\r\nvar Signal = /** @class */ (function () {\r\n    /**\r\n     * Create a new signal.\r\n     */\r\n    function Signal() {\r\n        this.head = new SignalLink();\r\n        this.hasNewLinks = false;\r\n        this.emitDepth = 0;\r\n        this.emit = this.emitInternal.bind(this);\r\n    }\r\n    /**\r\n     * Subscribe to this signal.\r\n     *\r\n     * @param callback This callback will be run when emit() is called.\r\n     * @param order Handlers with a higher order value will be called later.\r\n     */\r\n    Signal.prototype.connect = function (callback, order) {\r\n        if (order === void 0) { order = 0; }\r\n        var link = this.head.insert(callback, order);\r\n        if (this.emitDepth > 0) {\r\n            this.hasNewLinks = true;\r\n            link.newLink = true;\r\n        }\r\n        return new SignalConnectionImpl(this.head, link);\r\n    };\r\n    /**\r\n     * Unsubscribe from this signal with the original callback instance.\r\n     * While you can use this method, the SignalConnection returned by connect() will not be updated!\r\n     *\r\n     * @param callback The callback you passed to connect().\r\n     */\r\n    Signal.prototype.disconnect = function (callback) {\r\n        for (var link = this.head.next; link !== this.head; link = link.next) {\r\n            if (link.callback === callback) {\r\n                link.unlink();\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Disconnect all handlers from this signal event.\r\n     */\r\n    Signal.prototype.disconnectAll = function () {\r\n        while (this.head.next !== this.head) {\r\n            this.head.next.unlink();\r\n        }\r\n    };\r\n    Signal.prototype.emitInternal = function () {\r\n        this.emitDepth++;\r\n        for (var link = this.head.next; link !== this.head; link = link.next) {\r\n            if (link.isEnabled() && link.callback)\r\n                link.callback.apply(null, arguments);\r\n        }\r\n        this.emitDepth--;\r\n        this.unsetNewLink();\r\n    };\r\n    Signal.prototype.emitCollecting = function (collector, args) {\r\n        this.emitDepth++;\r\n        for (var link = this.head.next; link !== this.head; link = link.next) {\r\n            if (link.isEnabled() && link.callback) {\r\n                var result = link.callback.apply(null, args);\r\n                if (!collector.handleResult(result))\r\n                    break;\r\n            }\r\n        }\r\n        this.emitDepth--;\r\n        this.unsetNewLink();\r\n    };\r\n    Signal.prototype.unsetNewLink = function () {\r\n        if (this.hasNewLinks && this.emitDepth == 0) {\r\n            for (var link = this.head.next; link !== this.head; link = link.next)\r\n                link.newLink = false;\r\n            this.hasNewLinks = false;\r\n        }\r\n    };\r\n    return Signal;\r\n}());\r\nexports.Signal = Signal;\r\n/**\r\n * Base class for collectors.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n * @typeparam RT The return type of CB\r\n */\r\nvar Collector = /** @class */ (function () {\r\n    /**\r\n     * Create a new collector.\r\n     *\r\n     * @param signal The signal to emit.\r\n     */\r\n    function Collector(signal) {\r\n        var self = this;\r\n        this.emit = function () { signal.emitCollecting(self, arguments); };\r\n    }\r\n    return Collector;\r\n}());\r\nexports.Collector = Collector;\r\n/**\r\n * Returns the result of the last signal handler from a signal emission.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n * @typeparam RT The return type of CB\r\n */\r\nvar CollectorLast = /** @class */ (function (_super) {\r\n    __extends(CollectorLast, _super);\r\n    function CollectorLast() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    CollectorLast.prototype.handleResult = function (result) {\r\n        this.result = result;\r\n        return true;\r\n    };\r\n    /**\r\n     * Get the result of the last signal handler.\r\n     */\r\n    CollectorLast.prototype.getResult = function () {\r\n        return this.result;\r\n    };\r\n    /**\r\n     * Reset the result\r\n     */\r\n    CollectorLast.prototype.reset = function () {\r\n        delete this.result;\r\n    };\r\n    return CollectorLast;\r\n}(Collector));\r\nexports.CollectorLast = CollectorLast;\r\n/**\r\n * Keep signal emissions going while all handlers return true.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n * Return type of CB must be boolean.\r\n */\r\nvar CollectorUntil0 = /** @class */ (function (_super) {\r\n    __extends(CollectorUntil0, _super);\r\n    function CollectorUntil0() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.result = false;\r\n        return _this;\r\n    }\r\n    CollectorUntil0.prototype.handleResult = function (result) {\r\n        this.result = result;\r\n        return this.result ? true : false;\r\n    };\r\n    /**\r\n     * Get the result of the last signal handler.\r\n     */\r\n    CollectorUntil0.prototype.getResult = function () {\r\n        return this.result;\r\n    };\r\n    /**\r\n     * Reset the result\r\n     */\r\n    CollectorUntil0.prototype.reset = function () {\r\n        this.result = false;\r\n    };\r\n    return CollectorUntil0;\r\n}(Collector));\r\nexports.CollectorUntil0 = CollectorUntil0;\r\n/**\r\n * Keep signal emissions going while all handlers return false.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n * Return type of CB must be boolean.\r\n */\r\nvar CollectorWhile0 = /** @class */ (function (_super) {\r\n    __extends(CollectorWhile0, _super);\r\n    function CollectorWhile0() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.result = false;\r\n        return _this;\r\n    }\r\n    CollectorWhile0.prototype.handleResult = function (result) {\r\n        this.result = result;\r\n        return this.result ? false : true;\r\n    };\r\n    /**\r\n     * Get the result of the last signal handler.\r\n     */\r\n    CollectorWhile0.prototype.getResult = function () {\r\n        return this.result;\r\n    };\r\n    /**\r\n     * Reset the result\r\n     */\r\n    CollectorWhile0.prototype.reset = function () {\r\n        this.result = false;\r\n    };\r\n    return CollectorWhile0;\r\n}(Collector));\r\nexports.CollectorWhile0 = CollectorWhile0;\r\n/**\r\n * Returns the result of the all signal handlers from a signal emission in an array.\r\n *\r\n * @typeparam CB The function signature to be implemented by handlers.\r\n * @typeparam RT The return type of CB\r\n */\r\nvar CollectorArray = /** @class */ (function (_super) {\r\n    __extends(CollectorArray, _super);\r\n    function CollectorArray() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.result = [];\r\n        return _this;\r\n    }\r\n    CollectorArray.prototype.handleResult = function (result) {\r\n        this.result.push(result);\r\n        return true;\r\n    };\r\n    /**\r\n     * Get the list of results from the signal handlers.\r\n     */\r\n    CollectorArray.prototype.getResult = function () {\r\n        return this.result;\r\n    };\r\n    /**\r\n     * Reset the result\r\n     */\r\n    CollectorArray.prototype.reset = function () {\r\n        this.result.length = 0;\r\n    };\r\n    return CollectorArray;\r\n}(Collector));\r\nexports.CollectorArray = CollectorArray;\r\n//# sourceMappingURL=Signal.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-signals/dist/src/Signal.js\n// module id = 23\n// module chunks = 0","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-convert/index.js\n// module id = 24\n// module chunks = 0","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-convert/route.js\n// module id = 25\n// module chunks = 0","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = (parseFloat(match[1]) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color-string/index.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (obj == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight: function () {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/color/index.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simple-swizzle/index.js\n// module id = 28\n// module chunks = 0","module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/simple-swizzle/~/is-arrayish/index.js\n// module id = 29\n// module chunks = 0","\r\nexport type LayeredHtmlElements<IdType> = Map<IdType, HTMLElement>\r\n\r\nexport function switchHtmlLayer<IdType>( layers: LayeredHtmlElements<IdType>, layerToActivate: IdType ): boolean {\r\n\r\n    let isMadeVisible = false\r\n\r\n    for( let [ key, layer ] of layers.entries() ) {\r\n\r\n        if( key === layerToActivate ) {\r\n            if( layer.classList.contains( 'hiddenLayer' ) ) {\r\n                layer.classList.remove( 'hiddenLayer' )\r\n                isMadeVisible = true\r\n            }\r\n        }\r\n        else {\r\n            if( !layer.classList.contains( 'hiddenLayer' ) ) {\r\n                layer.classList.add( 'hiddenLayer' )\r\n            }\r\n        }\r\n    }\r\n\r\n    return isMadeVisible\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/common/LayeredGui.ts","import { IVec2 } from './Vector'\r\n\r\nexport interface PlayFieldCell {\r\n    entityIds: number[]\r\n}\r\n\r\nexport class PlayField {\r\n\r\n    public readonly width: number\r\n    public readonly height: number\r\n\r\n    constructor( width: number, height: number ) {\r\n\r\n        this.width = Math.trunc( width )\r\n        this.height = Math.trunc( height )\r\n\r\n        let size = this.width * this.height\r\n        this._data = new Array<PlayFieldCell>( size )\r\n        while( size-- ) {\r\n            this._data[ size ] = { entityIds: [] }\r\n        }\r\n    }\r\n\r\n    getCell( pos: IVec2 ): PlayFieldCell {\r\n\r\n        return this._data[ this.width * pos.y + pos.x ]\r\n    }\r\n\r\n    insertEntity( pos: IVec2, id: number ) {\r\n\r\n        const cell = this.getCell( pos )\r\n\r\n        if( !cell.entityIds.includes( id ) ) {\r\n\r\n            if( cell.entityIds.length == 0 ) {\r\n                ++this._usedCellCount\r\n            }\r\n\r\n            cell.entityIds.push( id )\r\n        }\r\n    }\r\n\r\n    removeEntity( pos: IVec2, id: number ) {\r\n\r\n        const cell = this.getCell( pos )\r\n\r\n        const index = cell.entityIds.indexOf( id )\r\n        if( index >= 0 ) {\r\n\r\n            cell.entityIds.splice( index, 1 )\r\n\r\n            if( cell.entityIds.length == 0 ) {\r\n                --this._usedCellCount\r\n            }\r\n        }\r\n    }\r\n\r\n    get usedCellCount() { return this._usedCellCount }\r\n\r\n    private _data: PlayFieldCell[]\r\n    private _usedCellCount: number = 0;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/game/common/PlayField.ts","import { Engine as ECS } from 'typed-ecstasy'\r\nimport { PlayField } from './common/PlayField'\r\nimport { createAndAddSnake } from './factories/SnakeFactory'\r\nimport { GameStatus, GameStateSystem } from './systems/GameStateSystem'\r\nimport { IGameProgress } from './common/GameProgress'\r\nimport { MovementInputSystem } from './systems/MovementInputSystem'\r\nimport { SnakeMovementSystem } from './systems/SnakeMovementSystem'\r\nimport { FoodDispenserSystem } from './systems/FoodDispenserSystem'\r\nimport { EatingSystem } from './systems/EatingSystem'\r\nimport { ObstacleGeneratorSystem } from './systems/ObstacleGeneratorSystem'\r\nimport { CollisionSystem } from './systems/SnakeCollisionSystem'\r\nimport { ClearRenderSystem } from './systems/ClearRenderSystem'\r\nimport { SnakeRenderSystem } from './systems/SnakeRenderSystem'\r\nimport { FoodRenderSystem } from './systems/FoodRenderSystem'\r\nimport { WallRenderSystem } from './systems/WallRenderSystem'\r\nimport { GameGui, switchHtmlLayer, GameLayerId } from './common/GameGui'\r\nimport { Direction } from './components/DirectionComponent'\r\n\r\n//-------------------------------------------------------------------------------------------------------------------\r\n\r\ninterface IGameContext {\r\n    status   : GameStatus\r\n    ecs      : ECS\r\n    ctx      : CanvasRenderingContext2D\r\n    playField: PlayField\r\n    gui      : GameGui\r\n    interval : number\r\n    progress : IGameProgress\r\n}\r\n\r\n//-------------------------------------------------------------------------------------------------------------------\r\n\r\nexport function startGame( canvas: HTMLCanvasElement, gui: GameGui ) {\r\n\r\n    const aspectRatio = canvas.clientWidth / canvas.clientHeight\r\n    const playFieldWidth = 64 // should be divisable by aspectRatio\r\n\r\n    const game: IGameContext = {\r\n        status: GameStatus.Playing,\r\n        ecs: new ECS(),\r\n        ctx: <CanvasRenderingContext2D> canvas.getContext( '2d' ),\r\n        playField: new PlayField( playFieldWidth, playFieldWidth / aspectRatio ),\r\n        gui: gui,\r\n        interval: 0.3,\r\n        progress: { score: 0 }\r\n    }\r\n\r\n\r\n    createAndAddSnake( game.ecs, game.playField, { x: game.playField.width / 2, y: game.playField.height / 2 },\r\n                       Math.random() > 0.5 ? Direction.left : Direction.right );\r\n\r\n    game.ecs.addSystem( new ObstacleGeneratorSystem( game ) )\r\n    game.ecs.addSystem( new MovementInputSystem( game ) )\r\n    game.ecs.addSystem( new SnakeMovementSystem( game.playField, game.interval ) )\r\n    game.ecs.addSystem( new FoodDispenserSystem( game.playField, 500, game.interval ) )\r\n    game.ecs.addSystem( new EatingSystem( game.playField, game.progress, game.interval ) )\r\n    game.ecs.addSystem( new CollisionSystem( game.playField, game.interval ) )\r\n    game.ecs.addSystem( new ClearRenderSystem( game.ctx, game.interval ) )\r\n    game.ecs.addSystem( new FoodRenderSystem( game.ctx, game.playField, game.interval ) )\r\n    game.ecs.addSystem( new WallRenderSystem( game.ctx, game.playField, game.interval ) )\r\n    game.ecs.addSystem( new SnakeRenderSystem( game.ctx, game.playField, game.interval ) )\r\n    game.ecs.addSystem( new GameStateSystem( game, game.interval ) )\r\n\r\n    gameLoop( game )\r\n}\r\n\r\n//-------------------------------------------------------------------------------------------------------------------\r\n\r\nfunction gameLoop( game: IGameContext, lastTime: number = 0 ) {\r\n\r\n    if( game.status === GameStatus.GameOver ) {\r\n\r\n        console.log(\"SCORE: \", game.progress.score)\r\n\r\n        document.getElementById( 'score' )!.innerText = game.progress.score.toString()\r\n\r\n        switchHtmlLayer( game.gui, GameLayerId.GameOver )\r\n\r\n        return\r\n    }\r\n\r\n    const time = performance.now() / 1000\r\n\r\n    if( lastTime > 0 ) {\r\n\r\n        game.ecs.update( time - lastTime )  // Update all systems\r\n    }\r\n\r\n    requestAnimationFrame( () => gameLoop( game, time ) )\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/startGame.ts","import { IntervalSystem } from 'typed-ecstasy'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class ClearRenderSystem extends IntervalSystem {\r\n\r\n    constructor( private _ctx: CanvasRenderingContext2D, interval: number ) {\r\n        super( interval )\r\n    }\r\n\r\n    protected updateInterval(): void {\r\n\r\n        this._ctx.clearRect( 0, 0, this._ctx.canvas.width, this._ctx.canvas.height )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/ClearRenderSystem.ts","import { Family, Entity, IntervalIteratingSystem } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { FeedableComponent } from '../components/FeedableComponent'\r\nimport { NutritionComponent } from '../components/FoodComponents'\r\nimport { PlayField } from '../common/PlayField'\r\nimport { IGameProgress } from '../common/GameProgress'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class EatingSystem extends IntervalIteratingSystem {\r\n\r\n    constructor( private _playField: PlayField, private _progress: IGameProgress, interval: number ) {\r\n        super( Family.all( PositionComponent, FeedableComponent ).get(), interval )\r\n    }\r\n\r\n    //.................................................................................................................\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        const ecs = this.getEngine()!\r\n\r\n        const position = entity.get( PositionComponent )!\r\n\r\n        const cell = this._playField.getCell( position )\r\n\r\n        for( const cellEntityId of cell.entityIds ) {\r\n\r\n            const cellEntity = ecs.getEntity( cellEntityId )\r\n            if( cellEntity ) {\r\n\r\n                // Check if cell has food\r\n                const nutrition = cellEntity.get( NutritionComponent )\r\n                if( nutrition ) {\r\n\r\n                    // Feed it to the Feedable\r\n                    const feedable = entity.get( FeedableComponent )!\r\n                    feedable.stomach += nutrition.value\r\n\r\n                    this._progress.score += nutrition.value\r\n\r\n                    // Remove the food entity\r\n                    this._playField.removeEntity( position, cellEntityId )\r\n                    ecs.removeEntity( cellEntity )\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/EatingSystem.ts","import { Engine as ECS, IntervalSystem, Family, Entity } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { NutritionComponent } from '../components/FoodComponents'\r\nimport { setEntityPosition } from '../common/SetEntityPosition'\r\nimport { PlayField } from '../common/PlayField'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class FoodDispenserSystem extends IntervalSystem {\r\n\r\n    private _foodEntities: Entity[] = [];\r\n\r\n    constructor( private _playField: PlayField, private _foodCount: number, interval: number ) {\r\n        super( interval )\r\n    }\r\n\r\n    protected addedToEngine( engine: ECS ): void {\r\n\r\n        super.addedToEngine( engine )\r\n\r\n        this._foodEntities = engine.getEntitiesFor( Family.all( NutritionComponent ).get() )\r\n\r\n        this.updateInterval()\r\n    }\r\n\r\n    protected updateInterval(): void {\r\n\r\n        let missingEntityCount = this._foodCount - this._foodEntities.length\r\n        while( missingEntityCount-- > 0 ) {\r\n\r\n            const ecs = this.getEngine()!\r\n\r\n            const entity = ecs.createEntity()\r\n            entity.add( new PositionComponent )\r\n            entity.add( new NutritionComponent( Math.trunc( 1 + Math.random() * 5 ) ) )\r\n            ecs.addEntity( entity )\r\n\r\n            // TODO: find empty playfield cell\r\n            const x = Math.trunc( Math.random() * this._playField.width )\r\n            const y = Math.trunc( Math.random() * this._playField.height )\r\n            setEntityPosition( this._playField, entity, { x: x, y: y } )\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/FoodDispenserSystem.ts","import { IntervalIteratingSystem, Family, Entity } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { NutritionComponent } from '../components/FoodComponents'\r\nimport { ISize } from '../common/Vector'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class FoodRenderSystem extends IntervalIteratingSystem {\r\n\r\n    constructor( private _ctx: CanvasRenderingContext2D, private _playField: ISize, interval: number ) {\r\n        super( Family.all( PositionComponent, NutritionComponent ).get(), interval )\r\n    }\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        const pos = entity.get( PositionComponent )!\r\n        const nutrition = entity.get( NutritionComponent )!\r\n\r\n        const x = ( pos.x + 0.5 ) / this._playField.width * this._ctx.canvas.width\r\n        const y = ( pos.y + 0.5 ) / this._playField.height * this._ctx.canvas.height\r\n        const w = this._ctx.canvas.width / this._playField.width\r\n        const h = this._ctx.canvas.height / this._playField.height\r\n\r\n        const scale = 0.075 + 0.15 * nutrition.value / 5\r\n\r\n        this._ctx.beginPath()\r\n        this._ctx.moveTo( x - w * scale, y )\r\n        this._ctx.lineTo( x + w * scale, y )\r\n        this._ctx.moveTo( x, y - h * scale )\r\n        this._ctx.lineTo( x, y + h * scale )\r\n        this._ctx.strokeStyle = \"#3fe03f\"\r\n        this._ctx.stroke()\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/FoodRenderSystem.ts","import { Family, Entity, IntervalSystem, Engine } from 'typed-ecstasy'\r\nimport { SnakeHeadComponent } from '../components/SnakeHeadComponent'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport enum GameStatus {\r\n    Playing,\r\n    GameOver\r\n}\r\n\r\nexport interface IGameState {\r\n    status: GameStatus\r\n}\r\n\r\nexport interface IGameProgress {\r\n    score: number\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class GameStateSystem extends IntervalSystem {\r\n\r\n    private _entities: Entity[] = []\r\n\r\n    constructor( private _state: IGameState, interval: number ) {\r\n        super( interval )\r\n    }\r\n\r\n    protected addedToEngine( engine: Engine ): void {\r\n\r\n        super.addedToEngine( engine )\r\n\r\n        this._entities = engine.getEntitiesFor( Family.all( SnakeHeadComponent ).get() )\r\n    }\r\n\r\n    updateInterval(): void {\r\n\r\n        const headsAlive = this._entities.filter( ( entity ) => entity.get( SnakeHeadComponent )!.isAlive )\r\n\r\n        if( headsAlive.length === 0 ) {\r\n            this._state.status = GameStatus.GameOver\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/GameStateSystem.ts","import { IntervalIteratingSystem, Family, Entity } from 'typed-ecstasy'\r\nimport { Direction, RequestedDirectionComponent } from '../components/DirectionComponent'\r\n\r\ninterface MovementInputSharedState {\r\n    interval: number\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class MovementInputSystem extends IntervalIteratingSystem {\r\n\r\n    private _inputDirection: Direction = Direction.none;\r\n\r\n    constructor( state: MovementInputSharedState ) {\r\n        super( Family.all( RequestedDirectionComponent ).get(), state.interval )\r\n\r\n        document.addEventListener( \"keydown\", ( event: KeyboardEvent ) => {\r\n\r\n            switch( event.keyCode ) {\r\n                case 37:  // left\r\n                    this._inputDirection = Direction.left\r\n                    break\r\n                case 38:  // up\r\n                    this._inputDirection = Direction.up\r\n                    break\r\n                case 39:  // right\r\n                    this._inputDirection = Direction.right\r\n                    break\r\n                case 40:  // down\r\n                    this._inputDirection = Direction.down\r\n                    break\r\n            }\r\n        } )\r\n    }\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        const direction = entity.get( RequestedDirectionComponent )!\r\n        direction.value = this._inputDirection\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/MovementInputSystem.ts","import { Engine, EntitySystem } from 'typed-ecstasy'\r\nimport { ObstacleComponent } from '../components/ObstacleComponent'\r\nimport { WallComponent } from '../components/WallComponent'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { PlayField } from '../common/PlayField'\r\nimport { setEntityPosition } from '../common/SetEntityPosition'\r\n\r\ninterface ObstacleGeneratorSharedState {\r\n    playField: PlayField\r\n}\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class ObstacleGeneratorSystem extends EntitySystem {\r\n\r\n    constructor( private _state: ObstacleGeneratorSharedState ) {\r\n        super( 0 )\r\n    }\r\n\r\n    protected addedToEngine( engine: Engine ): void {\r\n\r\n        super.addedToEngine( engine )\r\n    }\r\n\r\n    update( deltaTime: number ): void {\r\n\r\n        // Create walls around playfield\r\n        this.createWalls()\r\n\r\n        // No further calls to update() required\r\n        this.setProcessing( false )\r\n    }\r\n\r\n    createWalls() {\r\n        for( let x = 0; x < this._state.playField.width; ++x ) {\r\n\r\n            this.createObstacle( x, 0 )\r\n            this.createObstacle( x, this._state.playField.height - 1 )\r\n        }\r\n\r\n        for( let y = 1; y < this._state.playField.height - 1; ++y ) {\r\n\r\n            this.createObstacle( 0, y )\r\n            this.createObstacle( this._state.playField.width - 1, y )\r\n        }\r\n    }\r\n\r\n    createObstacle( x: number, y: number ) {\r\n\r\n        const ecs = this.getEngine()!\r\n\r\n        const entity = ecs.createEntity()\r\n        entity.add( new PositionComponent )\r\n        entity.add( new ObstacleComponent )\r\n        entity.add( new WallComponent )\r\n        ecs.addEntity( entity )\r\n\r\n        setEntityPosition( this._state.playField, entity, { x: x, y: y } )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/ObstacleGeneratorSystem.ts","import { Family, Entity, IntervalIteratingSystem } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { SnakeHeadComponent } from '../components/SnakeHeadComponent'\r\nimport { ObstacleComponent } from '../components/ObstacleComponent'\r\nimport { PlayField } from '../common/PlayField'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class CollisionSystem extends IntervalIteratingSystem {\r\n\r\n    constructor( private _playField: PlayField, interval: number ) {\r\n        super( Family.all( PositionComponent, SnakeHeadComponent ).get(), interval )\r\n    }\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        const ecs = this.getEngine()!\r\n\r\n        const position = entity.get( PositionComponent )!\r\n\r\n        const cell = this._playField.getCell( position )\r\n        for( let cellEntityId of cell.entityIds ) {\r\n\r\n            const cellEntity = ecs.getEntity( cellEntityId )!\r\n            if( cellEntity.get( ObstacleComponent ) ) {\r\n\r\n                const snakeHead = entity.get( SnakeHeadComponent )!\r\n                snakeHead.isAlive = false\r\n\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/SnakeCollisionSystem.ts","import { IntervalIteratingSystem, Family, Entity } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { DirectionComponent, Direction, RequestedDirectionComponent, directionToVec2 } from '../components/DirectionComponent'\r\nimport { SnakeHeadComponent } from '../components/SnakeHeadComponent'\r\nimport { DoubleLinkComponent, insertEntityInDoubleLinkedList, removeLastEntityFromDoubleLinkedList } from '../components/DoubleLinkComponent'\r\nimport { FeedableComponent } from '../components/FeedableComponent'\r\nimport { createSnakeSegment } from '../factories/SnakeFactory'\r\nimport { setEntityPosition } from '../common/SetEntityPosition'\r\nimport { PlayField } from '../common/PlayField'\r\nimport { IVec2, vec2add } from '../common/Vector'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class SnakeMovementSystem extends IntervalIteratingSystem {\r\n\r\n    constructor( private _playField: PlayField, interval: number ) {\r\n        super( Family.all( SnakeHeadComponent, PositionComponent, DoubleLinkComponent, DirectionComponent, RequestedDirectionComponent, FeedableComponent ).get(),\r\n               interval )\r\n    }\r\n\r\n    //.................................................................................................................\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        // Move snake by removing tail and inserting it in front of current head, incrementing position\r\n        // based on DirectionComponent.\r\n\r\n        const ecs = this.getEngine()!\r\n\r\n        // Get snake head components\r\n\r\n        const headComp = entity.get( SnakeHeadComponent )!\r\n        if( !headComp.isAlive ) {\r\n            return\r\n        }\r\n\r\n        const headPos = entity.get( PositionComponent )!\r\n        const direction = entity.get( DirectionComponent )!\r\n        const requestedDirection = entity.get( RequestedDirectionComponent )!\r\n        const feedable = entity.get( FeedableComponent )!\r\n\r\n        let newSegment: Entity\r\n\r\n        if( feedable.stomach > 0 ) {\r\n            // Snake has eaten something -> insert a new segment.\r\n\r\n            newSegment = createSnakeSegment( ecs, this._playField )\r\n\r\n            ++headComp.length\r\n\r\n            --feedable.stomach\r\n        }\r\n        else {\r\n            // Snake has not eaten -> keep its length, just move the current tail behind the head.\r\n\r\n            const currentTail = ecs.getEntity( headComp.tailId )!\r\n\r\n            const newTail = removeLastEntityFromDoubleLinkedList( ecs, currentTail )!\r\n\r\n            // Make head point to new tail.\r\n            headComp.tailId = newTail.getId()\r\n\r\n            newSegment = currentTail\r\n        }\r\n\r\n        // Insert new segment behind head.\r\n        insertEntityInDoubleLinkedList( ecs, newSegment, entity )\r\n\r\n        // Set position of new segment to current position of head.\r\n        setEntityPosition( this._playField, newSegment, headPos )\r\n\r\n        // Update position of head.\r\n        const directionVec = this.changeDirection( requestedDirection, direction )\r\n        setEntityPosition( this._playField, entity, vec2add( headPos, directionVec ) )\r\n    }\r\n\r\n    //.................................................................................................................\r\n\r\n    private changeDirection( requestedDirection: RequestedDirectionComponent, direction: DirectionComponent ): IVec2 {\r\n\r\n        switch( requestedDirection.value ) {\r\n            case Direction.left:\r\n                if( direction.value != Direction.right )\r\n                    direction.value = requestedDirection.value\r\n                break\r\n            case Direction.right:\r\n                if( direction.value != Direction.left )\r\n                    direction.value = requestedDirection.value\r\n                break\r\n            case Direction.up:\r\n                if( direction.value != Direction.down )\r\n                    direction.value = requestedDirection.value\r\n                break\r\n            case Direction.down:\r\n                if( direction.value != Direction.up )\r\n                    direction.value = requestedDirection.value\r\n                break\r\n        }\r\n\r\n        return directionToVec2( direction.value )\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/SnakeMovementSystem.ts","import { Engine, IntervalSystem, Family, Entity } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { DoubleLinkComponent } from '../components/DoubleLinkComponent'\r\nimport { SnakeHeadComponent } from '../components/SnakeHeadComponent'\r\nimport { ISize, IVec2 } from '../common/Vector'\r\nimport * as Color from 'color'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class SnakeRenderSystem extends IntervalSystem {\r\n\r\n    private _entities: Entity[] = [];\r\n\r\n    constructor( private _ctx: CanvasRenderingContext2D, private _playField: ISize, interval: number ) {\r\n        super( interval )\r\n    }\r\n\r\n    protected addedToEngine( engine: Engine ): void {\r\n\r\n        super.addedToEngine( engine )\r\n\r\n        this._entities = engine.getEntitiesFor( Family.all( PositionComponent, SnakeHeadComponent, DoubleLinkComponent ).get() )\r\n    }\r\n\r\n    updateInterval(): void {\r\n\r\n        const ecs = this.getEngine()!\r\n        const ctx = this._ctx\r\n\r\n        const w = ctx.canvas.width / this._playField.width\r\n        const h = ctx.canvas.height / this._playField.height\r\n\r\n        const radius     = 0.40 * w\r\n        const radius2    = 0.25 * w\r\n        const startColor = Color( \"#FFEF00\" )\r\n        const endColor   = Color( \"#FF3F00\" )\r\n\r\n        ctx.lineWidth = 1.5\r\n\r\n        // Draw all snakes\r\n\r\n        for( const headEntity of this._entities ) {\r\n\r\n            // Draw headEntity\r\n\r\n            const headPos  = headEntity.get( PositionComponent )!\r\n            const headComp = headEntity.get( SnakeHeadComponent )!\r\n            const headLink = headEntity.get( DoubleLinkComponent )!\r\n\r\n            const { x, y } = this.entityToCanvasPos( headPos )\r\n\r\n            ctx.strokeStyle = startColor.hsl().string()\r\n            ctx.beginPath()\r\n            ctx.ellipse( x, y, radius, radius, 0, 0, Math.PI * 2 )\r\n            ctx.stroke()\r\n            ctx.beginPath()\r\n            ctx.ellipse( x, y, radius2, radius2, 0, 0, Math.PI * 2 )\r\n            ctx.stroke()\r\n\r\n            // Draw remaining segments\r\n\r\n            let iSeg = 1\r\n            let segId = headLink.prevId\r\n\r\n            while( segId !== null ) {\r\n\r\n                const segmentEntity = ecs.getEntity( segId )!\r\n                const segPos = segmentEntity.get( PositionComponent )!\r\n                const segLink = segmentEntity.get( DoubleLinkComponent )!\r\n\r\n                const { x, y } = this.entityToCanvasPos( segPos )\r\n\r\n                const color = startColor.mix( endColor, iSeg / headComp.length )\r\n                ctx.strokeStyle = color.hsl().string()\r\n\r\n                ctx.beginPath()\r\n                ctx.ellipse( x, y, radius, radius, 0, 0, Math.PI * 2 )\r\n                ctx.stroke()\r\n\r\n                segId = segLink.prevId\r\n                ++iSeg\r\n            }\r\n        }\r\n    }\r\n\r\n    entityToCanvasPos( pos: IVec2 ): IVec2 {\r\n        const x = ( pos.x + 0.5 ) / this._playField.width * this._ctx.canvas.width\r\n        const y = ( pos.y + 0.5 ) / this._playField.height * this._ctx.canvas.height\r\n        return { x: x, y: y }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/SnakeRenderSystem.ts","import { Family, Entity, IntervalIteratingSystem } from 'typed-ecstasy'\r\nimport { PositionComponent } from '../components/PositionComponent'\r\nimport { WallComponent } from '../components/WallComponent'\r\nimport { ISize, IVec2 } from '../common/Vector'\r\n\r\n//---------------------------------------------------------------------------------------------------------------------\r\n\r\nexport class WallRenderSystem extends IntervalIteratingSystem {\r\n\r\n    constructor( private _ctx: CanvasRenderingContext2D, private _playField: ISize, interval: number ) {\r\n        super( Family.all( PositionComponent, WallComponent ).get(), interval )\r\n    }\r\n\r\n    protected processEntity( entity: Entity ): void {\r\n\r\n        const ecs = this.getEngine()!\r\n        const ctx = this._ctx\r\n\r\n        const w = ctx.canvas.width / this._playField.width\r\n        const h = ctx.canvas.height / this._playField.height\r\n\r\n        const obstacleSize = 0.9 * w\r\n\r\n        const pos = entity.get( PositionComponent )!\r\n        const { x, y } = this.entityToCanvasPos( pos )\r\n\r\n        ctx.fillStyle = \"#666666\"\r\n        ctx.fillRect( x - obstacleSize / 2, y - obstacleSize / 2, obstacleSize, obstacleSize )\r\n    }\r\n\r\n    entityToCanvasPos( pos: IVec2 ): IVec2 {\r\n        const x = ( pos.x + 0.5 ) / this._playField.width * this._ctx.canvas.width\r\n        const y = ( pos.y + 0.5 ) / this._playField.height * this._ctx.canvas.height\r\n        return { x: x, y: y }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game/systems/WallRenderSystem.ts","import * as wutil from './utils/windowUtils'\nimport { startGame } from './game/startGame'\nimport { GameLayerId, switchHtmlLayer, GameGui } from './game/common/GameGui'\n\n//-------------------------------------------------------------------------------------------------------------------\n\nfunction main() {\n\n    const gameCanvas = document.getElementById( 'gameCanvas' ) as HTMLCanvasElement\n    const menuScreen = document.getElementById( 'menuScreen' ) as HTMLElement\n    const gameOverScreen = document.getElementById( 'gameOverScreen' ) as HTMLElement\n\n    const gui: GameGui = new Map( [\n        [ GameLayerId.Game, gameCanvas ],\n        [ GameLayerId.Menu, menuScreen ],\n        [ GameLayerId.GameOver, gameOverScreen ],\n    ] )\n\n    wutil.resizeCanvasPixelBuffer( gameCanvas )\n\n    wireUpEventListeners( gameCanvas, gui )\n}\n\n//-------------------------------------------------------------------------------------------------------------------\n\nfunction wireUpEventListeners( gameCanvas: HTMLCanvasElement, gui: GameGui ) {\n\n    // On window resize, resize the canvas to fill browser window dynamically.\n    // Use debounce() to avoid costly calculations while the window size is in flux.\n    window.addEventListener( \"resize\", () => wutil.resizeCanvasPixelBuffer( gameCanvas ) )\n\n    // Toggle fullscreen by double-click on canvas.\n    gameCanvas.addEventListener( \"dblclick\", wutil.toggleFullscreen )\n\n    const switchToGameAndPlay = () => {\n        if( switchHtmlLayer( gui, GameLayerId.Game ) ) {\n            startGame( gameCanvas, gui )\n        }\n    }\n\n    gui.get( GameLayerId.Menu )!.addEventListener( \"click\", switchToGameAndPlay )\n    gui.get( GameLayerId.GameOver )!.addEventListener( \"click\", switchToGameAndPlay )\n}\n\n//-------------------------------------------------------------------------------------------------------------------\n\nmain()\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","/**\r\n * Resize canvas pixel buffer to fit the CSS size of the element.\r\n * @param canvas \r\n */\r\nexport function resizeCanvasPixelBuffer( canvas: HTMLCanvasElement ) {\r\n\r\n\tcanvas.width = Math.round( canvas.clientWidth * window.devicePixelRatio )\r\n\tcanvas.height = Math.round( canvas.clientHeight * window.devicePixelRatio )\r\n}\r\n\r\n//···················································································································\r\n\r\nexport function toggleFullscreen() {\r\n\r\n\tif( document.documentElement.requestFullscreen ) {\r\n\t\tif( document.fullscreenElement )\r\n\t\t\tdocument.exitFullscreen()\r\n\t\telse\r\n\t\t\tdocument.documentElement.requestFullscreen()\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/windowUtils.ts","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/*******************************************************************************\r\n * Copyright 2015 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nvar Constructor_1 = require(\"../utils/Constructor\");\r\n/**\r\n * Base class for all components. A Component is intended as a data holder\r\n * and provides data to be processed in an EntitySystem.\r\n */\r\nvar Component = /** @class */ (function () {\r\n    function Component() {\r\n        this; //fixme: bug in istanbul\r\n    }\r\n    /**\r\n     * @return The class of this component.\r\n     */\r\n    Component.prototype.getComponentClass = function () {\r\n        return Constructor_1.Constructor.getFor(this);\r\n    };\r\n    /**\r\n     * Check if this component matches the specified class.\r\n     *\r\n     * @param clazz The class to compare with.\r\n     * @return true if it matches.\r\n     */\r\n    Component.prototype.is = function (clazz) {\r\n        return Constructor_1.Constructor.getFor(this) === clazz;\r\n    };\r\n    return Component;\r\n}());\r\nexports.Component = Component;\r\n//# sourceMappingURL=Component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/Component.js\n// module id = 46\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2015 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Entity_1 = require(\"./Entity\");\r\nvar UniqueType_1 = require(\"./UniqueType\");\r\nvar Family_1 = require(\"./Family\");\r\nvar typed_signals_1 = require(\"typed-signals\");\r\nvar Lookup_1 = require(\"../utils/Lookup\");\r\nvar DelayedOperationHandler_1 = require(\"../utils/DelayedOperationHandler\");\r\nfunction compareSystems(a, b) {\r\n    return a.getPriority() - b.getPriority();\r\n}\r\n/**\r\n *  A simple entity signal.\r\n */\r\nvar EntitySignal = /** @class */ (function (_super) {\r\n    __extends(EntitySignal, _super);\r\n    function EntitySignal() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return EntitySignal;\r\n}(typed_signals_1.Signal));\r\nexports.EntitySignal = EntitySignal;\r\n/**\r\n * The heart of the Entity framework. It is responsible for keeping track of Entity and\r\n * managing EntitySystem objects. The Engine should be updated every tick via the update(float) method.\r\n *\r\n * With the Engine you can:\r\n *\r\n * - Create entities using createEntity()\r\n * - Add/Remove Entity objects\r\n * - Add/Remove {@link EntitySystem}s\r\n * - Obtain a list of entities for a specific Family\r\n * - Update the main loop\r\n * - Connect to/Disconnect from EntitySignal\r\n */\r\nvar Engine = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Engine.\r\n     */\r\n    function Engine() {\r\n        this.entities = [];\r\n        this.entitiesById = {};\r\n        this.systems = [];\r\n        this.systemsByType = {};\r\n        this.entitiesByFamily = {};\r\n        this.entityAddedSignals = {};\r\n        this.entityRemovedSignals = {};\r\n        this.updating = false;\r\n        this.notifying = false;\r\n        this.nextEntityId = 1;\r\n        this.entityFamilyUpdates = [];\r\n        // private systemOperationHandler: DelayedOperationHandler<EntitySystem>;\r\n        /** Will dispatch an event when an entity is added. */\r\n        this.entityAdded = new EntitySignal();\r\n        /** Will dispatch an event when an entity is removed. */\r\n        this.entityRemoved = new EntitySignal();\r\n        /** Store and look up instances of classes. */\r\n        this.lookup = new Lookup_1.Lookup();\r\n        this.entityOperationHandler = new DelayedOperationHandler_1.DelayedOperationHandler({\r\n            onAdd: this.addEntityInternal.bind(this),\r\n            onRemove: this.removeEntityInternal.bind(this),\r\n            onRemoveAll: this.removeAllEntitiesInternal.bind(this)\r\n        });\r\n        // this.systemOperationHandler = new DelayedOperationHandler({\r\n        // \tonAdd: this.addSystemInternal.bind(this),\r\n        // \tonRemove: this.removeSystemInternal.bind(this),\r\n        // \tonRemoveAll: this.removeAllSystemsInternal.bind(this)\r\n        // });\r\n    }\r\n    /**\r\n     * @return true if this engine is currently updating systems.\r\n     */\r\n    Engine.prototype.isUpdating = function () {\r\n        return this.updating;\r\n    };\r\n    /**\r\n     * Remove all entities and systems.\r\n     */\r\n    Engine.prototype.destroy = function () {\r\n        do {\r\n            this.removeAllEntities();\r\n            this.processEntityFamilyUpdates();\r\n            this.entityOperationHandler.process();\r\n        } while (this.entities.length);\r\n        this.removeAllSystems();\r\n    };\r\n    /** @return A new Entity. In order to add it to the Engine, use addEntity(Entity). */\r\n    Engine.prototype.createEntity = function () {\r\n        return new Entity_1.Entity();\r\n    };\r\n    /**\r\n     * Creates and assembles an Entity using the EntityFactory.\r\n     * In order to add it to the Engine, use addEntity().\r\n     * setEntityFactory must be called before first use.\r\n     *\r\n     * @param blueprintname The name of the entity blueprint\r\n     * @return A fully assembled Entity or null if the assembly failed.\r\n     */\r\n    Engine.prototype.assembleEntity = function (blueprintname, overrides) {\r\n        if (this.entityFactory) {\r\n            var entity = this.createEntity();\r\n            if (this.entityFactory.assemble(entity, blueprintname, overrides)) {\r\n                return entity;\r\n            }\r\n            entity.removeAll();\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Set the EntityFactory to use with assembleEntity.\r\n     *\r\n     * @param entityFactory The new EntityFactory\r\n     */\r\n    Engine.prototype.setEntityFactory = function (entityFactory) {\r\n        this.entityFactory = entityFactory;\r\n    };\r\n    /**\r\n     * Adds an entity to this Engine.\r\n     *\r\n     * @param entity the entity to add\r\n     */\r\n    Engine.prototype.addEntity = function (entity) {\r\n        if (entity.uuid != 0)\r\n            throw \"Entity already added to an engine\";\r\n        entity.uuid = this.obtainEntityId();\r\n        entity.engine = this;\r\n        if (this.updating || this.notifying)\r\n            this.entityOperationHandler.add(entity);\r\n        else\r\n            this.addEntityInternal(entity);\r\n    };\r\n    /**\r\n     * Removes an entity from this Engine.\r\n     *\r\n     * @param entity the entity to remove\r\n     */\r\n    Engine.prototype.removeEntity = function (entity) {\r\n        if (this.updating || this.notifying) {\r\n            if (entity.scheduledForRemoval)\r\n                return;\r\n            entity.scheduledForRemoval = true;\r\n            this.entityOperationHandler.remove(entity);\r\n        }\r\n        else {\r\n            entity.scheduledForRemoval = true;\r\n            this.removeEntityInternal(entity);\r\n        }\r\n    };\r\n    /**\r\n     * Removes all entities registered with this Engine.\r\n     */\r\n    Engine.prototype.removeAllEntities = function () {\r\n        if (this.updating || this.notifying) {\r\n            for (var _i = 0, _a = this.entities; _i < _a.length; _i++) {\r\n                var entity = _a[_i];\r\n                entity.scheduledForRemoval = true;\r\n            }\r\n            this.entityOperationHandler.removeAll();\r\n        }\r\n        else {\r\n            while (this.entities.length) {\r\n                this.removeEntity(this.entities[0]);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param id The id of an Entity\r\n     * @return The entity associated with the specified id or null if no such entity exists.\r\n     */\r\n    Engine.prototype.getEntity = function (id) {\r\n        return this.entitiesById[id] || null;\r\n    };\r\n    /** @return A list of all entities */\r\n    Engine.prototype.getEntities = function () {\r\n        return this.entities;\r\n    };\r\n    /**\r\n     * Adds the EntitySystem to this Engine.\r\n     *\r\n     * @typeparam T The entity system class\r\n     * @param system The EntitySystem to add\r\n     */\r\n    Engine.prototype.addSystem = function (system) {\r\n        var systemType = UniqueType_1.UniqueType.getForInstance(system);\r\n        var systemTypeIndex = systemType.getIndex();\r\n        this.removeSystemInternal(systemType);\r\n        this.systems.push(system);\r\n        this.systemsByType[systemTypeIndex] = system;\r\n        system.addedToEngine(this);\r\n        this.sortSystems();\r\n        return system;\r\n    };\r\n    /**\r\n     * Removes the EntitySystem from this Engine.\r\n     *\r\n     * @param clazz The System class to remove\r\n     */\r\n    Engine.prototype.removeSystem = function (clazz) {\r\n        this.removeSystemInternal(UniqueType_1.UniqueType.getForClass(clazz));\r\n    };\r\n    /**\r\n     * Removes all systems registered with this Engine.\r\n     */\r\n    Engine.prototype.removeAllSystems = function () {\r\n        for (var _i = 0, _a = this.systems; _i < _a.length; _i++) {\r\n            var system = _a[_i];\r\n            system.removedFromEngine(this);\r\n        }\r\n        this.systems = [];\r\n        this.systemsByType = {};\r\n    };\r\n    /**\r\n     * Sort all systems (usually done letmatically, except if you override EntitySystem.getPriority())\r\n     */\r\n    Engine.prototype.sortSystems = function () {\r\n        this.systems.sort(compareSystems);\r\n    };\r\n    /**\r\n     * Removes the EntitySystem from this Engine.\r\n     *\r\n     * @param type The EntitySystem type to remove\r\n     */\r\n    Engine.prototype.removeSystemInternal = function (type) {\r\n        var index = type.getIndex();\r\n        var system = this.systemsByType[index];\r\n        if (system) {\r\n            delete this.systemsByType[index];\r\n            var index2 = this.systems.indexOf(system);\r\n            /* istanbul ignore else: this will never happen */\r\n            if (index2 !== -1)\r\n                this.systems.splice(index2, 1);\r\n            system.removedFromEngine(this);\r\n        }\r\n    };\r\n    /**\r\n     * Quick EntitySystem retrieval.\r\n     *\r\n     * @typeparam T The entity system class\r\n     * @param clazz The EntitySystem class\r\n     * @return The EntitySystem of the specified class, or null if no such system exists.\r\n     */\r\n    Engine.prototype.getSystem = function (clazz) {\r\n        var type = UniqueType_1.UniqueType.getForClass(clazz);\r\n        var index = type.getIndex();\r\n        return this.systemsByType[index] || null;\r\n    };\r\n    /**\r\n     * @return A list of all entity systems managed by the Engine.\r\n     */\r\n    Engine.prototype.getSystems = function () {\r\n        return this.systems;\r\n    };\r\n    /**\r\n     * @param family A Family instance\r\n     * @return A list of entities for the specified Family. Will return the same instance every time.\r\n     */\r\n    Engine.prototype.getEntitiesFor = function (family) {\r\n        return this.registerFamily(family);\r\n    };\r\n    /**\r\n     * @param family A Family instance\r\n     * @return The EntitySignal which emits when an entity is added to the specified Family\r\n     */\r\n    Engine.prototype.getEntityAddedSignal = function (family) {\r\n        this.registerFamily(family);\r\n        var index = family.uniqueType.getIndex();\r\n        var signal = this.entityAddedSignals[index];\r\n        if (!signal)\r\n            signal = this.entityAddedSignals[index] = new EntitySignal();\r\n        return signal;\r\n    };\r\n    /**\r\n     * @param family A Family instance\r\n     * @return The EntitySignal which emits when an entity is removed from the specified Family\r\n     */\r\n    Engine.prototype.getEntityRemovedSignal = function (family) {\r\n        this.registerFamily(family);\r\n        var index = family.uniqueType.getIndex();\r\n        var signal = this.entityRemovedSignals[index];\r\n        if (!signal)\r\n            signal = this.entityRemovedSignals[index] = new EntitySignal();\r\n        return signal;\r\n    };\r\n    /**\r\n     * Updates all the systems in this Engine.\r\n     *\r\n     * @param deltaTime The time passed since the last frame.\r\n     */\r\n    Engine.prototype.update = function (deltaTime) {\r\n        this.updating = true;\r\n        for (var _i = 0, _a = this.systems; _i < _a.length; _i++) {\r\n            var system = _a[_i];\r\n            if (system.checkProcessing())\r\n                system.update(deltaTime);\r\n            this.processEntityFamilyUpdates();\r\n            this.entityOperationHandler.process();\r\n        }\r\n        this.updating = false;\r\n    };\r\n    Engine.prototype.obtainEntityId = function () {\r\n        return this.nextEntityId++;\r\n    };\r\n    /**\r\n     * Request the update of an entities family bits. For internal use.\r\n     *\r\n     * @param entity The entity to update\r\n     */\r\n    Engine.prototype.requestFamilyUpdate = function (entity) {\r\n        if (this.updating || this.notifying)\r\n            this.entityFamilyUpdates.push(entity);\r\n        else\r\n            this.updateFamilyMembership(entity);\r\n    };\r\n    Engine.prototype.processEntityFamilyUpdates = function () {\r\n        var entity;\r\n        while (entity = this.entityFamilyUpdates.pop()) {\r\n            this.updateFamilyMembership(entity);\r\n        }\r\n    };\r\n    Engine.prototype.updateFamilyMembership = function (entity) {\r\n        if (entity.scheduledForRemoval || !entity.isValid())\r\n            return;\r\n        for (var key in this.entitiesByFamily) {\r\n            var family = Family_1.Family.getByIndex(parseInt(key));\r\n            /* istanbul ignore if: this will never happen */\r\n            if (!family)\r\n                continue;\r\n            var familyEntities = this.entitiesByFamily[key];\r\n            var familyIndex = family.uniqueType.getIndex();\r\n            var belongsToFamily = entity.getFamilyBits().get(familyIndex);\r\n            var matches = family.matches(entity);\r\n            if (!belongsToFamily && matches) {\r\n                familyEntities.push(entity);\r\n                entity.familyBits.set(familyIndex);\r\n                this.notifyFamilyListenersAdd(family, entity);\r\n            }\r\n            else if (belongsToFamily && !matches) {\r\n                var index = familyEntities.indexOf(entity);\r\n                /* istanbul ignore else: this will never happen */\r\n                if (index !== -1)\r\n                    familyEntities.splice(index, 1);\r\n                entity.familyBits.clear(familyIndex);\r\n                this.notifyFamilyListenersRemove(family, entity);\r\n            }\r\n        }\r\n    };\r\n    Engine.prototype.removeEntityInternal = function (entity) {\r\n        // Check if entity is able to be removed (id == 0 means the entity has not been added to the engine yet)\r\n        if (entity.getId() == 0) {\r\n            entity.removeAll();\r\n            return;\r\n        }\r\n        var index = this.entities.indexOf(entity);\r\n        if (index === -1)\r\n            throw \"Entity does not belong to this engine\";\r\n        this.entities.splice(index, 1);\r\n        delete this.entitiesById[entity.getId()];\r\n        if (!entity.getFamilyBits().isEmpty()) {\r\n            for (var key in this.entitiesByFamily) {\r\n                var family = Family_1.Family.getByIndex(parseInt(key));\r\n                /* istanbul ignore if: this will never happen */\r\n                if (!family)\r\n                    continue;\r\n                var familyEntities = this.entitiesByFamily[key];\r\n                if (family.matches(entity)) {\r\n                    var index2 = familyEntities.indexOf(entity);\r\n                    /* istanbul ignore else: this will never happen */\r\n                    if (index2 !== -1)\r\n                        familyEntities.splice(index2, 1);\r\n                    entity.familyBits.clear(family.uniqueType.getIndex());\r\n                    this.notifyFamilyListenersRemove(family, entity);\r\n                }\r\n            }\r\n        }\r\n        this.notifying = true;\r\n        this.entityRemoved.emit(entity);\r\n        this.notifying = false;\r\n        entity.removeAll();\r\n        entity.engine = this;\r\n    };\r\n    Engine.prototype.removeAllEntitiesInternal = function () {\r\n        var entities = this.getEntities();\r\n        while (entities.length) {\r\n            this.removeEntityInternal(entities[entities.length - 1]);\r\n        }\r\n    };\r\n    Engine.prototype.addEntityInternal = function (entity) {\r\n        this.entities.push(entity);\r\n        this.entitiesById[entity.getId()] = entity;\r\n        this.updateFamilyMembership(entity);\r\n        this.notifying = true;\r\n        this.entityAdded.emit(entity);\r\n        this.notifying = false;\r\n    };\r\n    Engine.prototype.notifyFamilyListenersAdd = function (family, entity) {\r\n        var signal = this.entityAddedSignals[family.uniqueType.getIndex()];\r\n        if (signal) {\r\n            this.notifying = true;\r\n            signal.emit(entity);\r\n            this.notifying = false;\r\n        }\r\n    };\r\n    Engine.prototype.notifyFamilyListenersRemove = function (family, entity) {\r\n        var signal = this.entityRemovedSignals[family.uniqueType.getIndex()];\r\n        if (signal) {\r\n            this.notifying = true;\r\n            signal.emit(entity);\r\n            this.notifying = false;\r\n        }\r\n    };\r\n    Engine.prototype.registerFamily = function (family) {\r\n        var familyIndex = family.uniqueType.getIndex();\r\n        var entities = this.entitiesByFamily[familyIndex];\r\n        if (entities)\r\n            return entities;\r\n        var familyEntities = this.entitiesByFamily[familyIndex];\r\n        if (!familyEntities)\r\n            familyEntities = this.entitiesByFamily[familyIndex] = [];\r\n        for (var _i = 0, _a = this.entities; _i < _a.length; _i++) {\r\n            var e = _a[_i];\r\n            if (family.matches(e)) {\r\n                familyEntities.push(e);\r\n                e.familyBits.set(familyIndex);\r\n            }\r\n        }\r\n        return familyEntities;\r\n    };\r\n    return Engine;\r\n}());\r\nexports.Engine = Engine;\r\n//# sourceMappingURL=Engine.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/core/Engine.js\n// module id = 47\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n* Copyright 2015 See AUTHORS file.\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntitySystem_1 = require(\"../core/EntitySystem\");\r\n/**\r\n * A simple EntitySystem that processes a Family of entities not once per frame, but after a given interval.\r\n * Entity processing logic should be placed in processEntity().\r\n */\r\nvar IntervalIteratingSystem = /** @class */ (function (_super) {\r\n    __extends(IntervalIteratingSystem, _super);\r\n    /**\r\n     * @param family Represents the collection of family the system should process\r\n     * @param interval time in seconds between calls to updateInterval().\r\n     * @param priority The priority to execute this system with (lower means higher priority).\r\n     */\r\n    function IntervalIteratingSystem(family, interval, priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        var _this = _super.call(this, priority) || this;\r\n        _this.entities = [];\r\n        _this.accumulator = 0;\r\n        _this.family = family;\r\n        _this.interval = interval;\r\n        return _this;\r\n    }\r\n    IntervalIteratingSystem.prototype.addedToEngine = function (engine) {\r\n        _super.prototype.addedToEngine.call(this, engine);\r\n        this.entities = engine.getEntitiesFor(this.family);\r\n    };\r\n    IntervalIteratingSystem.prototype.removedFromEngine = function (engine) {\r\n        _super.prototype.removedFromEngine.call(this, engine);\r\n        this.entities = [];\r\n    };\r\n    /**\r\n     * The processing logic of the system should be placed here.\r\n     */\r\n    IntervalIteratingSystem.prototype.updateInterval = function () {\r\n        for (var _i = 0, _a = this.entities; _i < _a.length; _i++) {\r\n            var entity = _a[_i];\r\n            this.processEntity(entity);\r\n        }\r\n    };\r\n    /** @return A list of entities processed by the system */\r\n    IntervalIteratingSystem.prototype.getEntities = function () {\r\n        return this.entities;\r\n    };\r\n    /** @return The Family used when the system was created */\r\n    IntervalIteratingSystem.prototype.getFamily = function () {\r\n        return this.family;\r\n    };\r\n    /** @return time in seconds between calls to updateInterval(). */\r\n    IntervalIteratingSystem.prototype.getInterval = function () {\r\n        return this.interval;\r\n    };\r\n    IntervalIteratingSystem.prototype.update = function (deltaTime) {\r\n        this.accumulator += deltaTime;\r\n        while (this.accumulator >= this.interval) {\r\n            this.accumulator -= this.interval;\r\n            this.updateInterval();\r\n        }\r\n    };\r\n    return IntervalIteratingSystem;\r\n}(EntitySystem_1.EntitySystem));\r\nexports.IntervalIteratingSystem = IntervalIteratingSystem;\r\n//# sourceMappingURL=IntervalIteratingSystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/systems/IntervalIteratingSystem.js\n// module id = 48\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n* Copyright 2015 See AUTHORS file.\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntitySystem_1 = require(\"../core/EntitySystem\");\r\n/**\r\n * A simple EntitySystem that does not run its update logic every call to update(float), but after a\r\n * given interval. The actual logic should be placed in updateInterval().\r\n */\r\nvar IntervalSystem = /** @class */ (function (_super) {\r\n    __extends(IntervalSystem, _super);\r\n    /**\r\n     * @param interval time in seconds between calls to updateInterval().\r\n     * @param priority The priority to execute this system with (lower means higher priority).\r\n     */\r\n    function IntervalSystem(interval, priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        var _this = _super.call(this, priority) || this;\r\n        _this.accumulator = 0;\r\n        _this.interval = interval;\r\n        return _this;\r\n    }\r\n    /** @return time in seconds between calls to updateInterval(). */\r\n    IntervalSystem.prototype.getInterval = function () {\r\n        return this.interval;\r\n    };\r\n    IntervalSystem.prototype.update = function (deltaTime) {\r\n        this.accumulator += deltaTime;\r\n        while (this.accumulator >= this.interval) {\r\n            this.accumulator -= this.interval;\r\n            this.updateInterval();\r\n        }\r\n    };\r\n    return IntervalSystem;\r\n}(EntitySystem_1.EntitySystem));\r\nexports.IntervalSystem = IntervalSystem;\r\n//# sourceMappingURL=IntervalSystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/systems/IntervalSystem.js\n// module id = 49\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n* Copyright 2015 See AUTHORS file.\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntitySystem_1 = require(\"../core/EntitySystem\");\r\n/**\r\n * A simple EntitySystem that iterates over each entity and calls processEntity() for each entity every time the\r\n * EntitySystem is updated. This is really just a convenience class as most systems iterate over a list of entities.\r\n */\r\nvar IteratingSystem = /** @class */ (function (_super) {\r\n    __extends(IteratingSystem, _super);\r\n    /**\r\n     * @param family The family of entities iterated over in this System\r\n     * @param priority The priority to execute this system with (lower means higher priority).\r\n     */\r\n    function IteratingSystem(family, priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        var _this = _super.call(this, priority) || this;\r\n        _this.entities = [];\r\n        _this.family = family;\r\n        return _this;\r\n    }\r\n    IteratingSystem.prototype.update = function (deltaTime) {\r\n        for (var _i = 0, _a = this.entities; _i < _a.length; _i++) {\r\n            var entity = _a[_i];\r\n            this.processEntity(entity, deltaTime);\r\n        }\r\n    };\r\n    IteratingSystem.prototype.addedToEngine = function (engine) {\r\n        _super.prototype.addedToEngine.call(this, engine);\r\n        this.entities = engine.getEntitiesFor(this.family);\r\n    };\r\n    IteratingSystem.prototype.removedFromEngine = function (engine) {\r\n        _super.prototype.removedFromEngine.call(this, engine);\r\n        this.entities = [];\r\n    };\r\n    /** @return A list of entities processed by the system */\r\n    IteratingSystem.prototype.getEntities = function () {\r\n        return this.entities;\r\n    };\r\n    /** @return The Family used when the system was created */\r\n    IteratingSystem.prototype.getFamily = function () {\r\n        return this.family;\r\n    };\r\n    return IteratingSystem;\r\n}(EntitySystem_1.EntitySystem));\r\nexports.IteratingSystem = IteratingSystem;\r\n//# sourceMappingURL=IteratingSystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/systems/IteratingSystem.js\n// module id = 50\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n* Copyright 2015 See AUTHORS file.\r\n*\r\n* Licensed under the Apache License, Version 2.0 (the \"License\");\r\n* you may not use this file except in compliance with the License.\r\n* You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing, software\r\n* distributed under the License is distributed on an \"AS IS\" BASIS,\r\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n* See the License for the specific language governing permissions and\r\n* limitations under the License.\r\n******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EntitySystem_1 = require(\"../core/EntitySystem\");\r\nvar typed_signals_1 = require(\"typed-signals\");\r\n/**\r\n * Like IteratingSystem, but sorted using a comparator.\r\n * It processes each Entity of a given Family in the order specified by a comparator and\r\n * calls processEntity() for each Entity every time the EntitySystem is updated. This is really just a convenience\r\n * class as rendering systems tend to iterate over a list of entities in a sorted manner. Adding entities will cause\r\n * the entity list to be resorted. Call forceSort() if you changed your sorting criteria.\r\n */\r\nvar SortedIteratingSystem = /** @class */ (function (_super) {\r\n    __extends(SortedIteratingSystem, _super);\r\n    /**\r\n     * @param family The family of entities iterated over in this System\r\n     * @param comparator The comparator to sort the entities\r\n     * @param priority The priority to execute this system with (lower means higher priority).\r\n     */\r\n    function SortedIteratingSystem(family, comparator, priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        var _this = _super.call(this, priority) || this;\r\n        _this.sortedEntities = [];\r\n        _this.shouldSort = false;\r\n        _this.connections = new typed_signals_1.SignalConnections();\r\n        _this.family = family;\r\n        _this.comparator = comparator;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Call this if the sorting criteria have changed.\r\n     * The actual sorting will be delayed until the entities are processed.\r\n     */\r\n    SortedIteratingSystem.prototype.forceSort = function () {\r\n        this.shouldSort = true;\r\n    };\r\n    SortedIteratingSystem.prototype.sort = function () {\r\n        if (this.shouldSort) {\r\n            this.sortedEntities.sort(this.comparator);\r\n            this.shouldSort = false;\r\n        }\r\n    };\r\n    SortedIteratingSystem.prototype.entityAdded = function (entity) {\r\n        this.sortedEntities.push(entity);\r\n        this.shouldSort = true;\r\n    };\r\n    SortedIteratingSystem.prototype.entityRemoved = function (entity) {\r\n        var index = this.sortedEntities.indexOf(entity);\r\n        if (index !== -1) {\r\n            this.sortedEntities.splice(index, 1);\r\n            this.shouldSort = true;\r\n        }\r\n    };\r\n    SortedIteratingSystem.prototype.addedToEngine = function (engine) {\r\n        _super.prototype.addedToEngine.call(this, engine);\r\n        var newEntities = engine.getEntitiesFor(this.family);\r\n        this.sortedEntities = [];\r\n        if (newEntities.length) {\r\n            for (var _i = 0, newEntities_1 = newEntities; _i < newEntities_1.length; _i++) {\r\n                var entity = newEntities_1[_i];\r\n                this.sortedEntities.push(entity);\r\n            }\r\n            this.sortedEntities.sort(this.comparator);\r\n        }\r\n        this.shouldSort = false;\r\n        this.connections.add(engine.getEntityAddedSignal(this.family).connect(this.entityAdded.bind(this)));\r\n        this.connections.add(engine.getEntityRemovedSignal(this.family).connect(this.entityRemoved.bind(this)));\r\n    };\r\n    SortedIteratingSystem.prototype.removedFromEngine = function (engine) {\r\n        _super.prototype.removedFromEngine.call(this, engine);\r\n        this.connections.disconnectAll();\r\n        this.sortedEntities = [];\r\n        this.shouldSort = false;\r\n    };\r\n    SortedIteratingSystem.prototype.update = function (deltaTime) {\r\n        this.sort();\r\n        for (var _i = 0, _a = this.sortedEntities; _i < _a.length; _i++) {\r\n            var entity = _a[_i];\r\n            this.processEntity(entity, deltaTime);\r\n        }\r\n    };\r\n    /**\r\n     * @return The set of entities processed by the system\r\n     */\r\n    SortedIteratingSystem.prototype.getEntities = function () {\r\n        this.sort();\r\n        return this.sortedEntities;\r\n    };\r\n    /** @return The Family used when the system was created */\r\n    SortedIteratingSystem.prototype.getFamily = function () {\r\n        return this.family;\r\n    };\r\n    return SortedIteratingSystem;\r\n}(EntitySystem_1.EntitySystem));\r\nexports.SortedIteratingSystem = SortedIteratingSystem;\r\n//# sourceMappingURL=SortedIteratingSystem.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/systems/SortedIteratingSystem.js\n// module id = 51\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar emptyOverrides = {};\r\n/**\r\n * Stores the name of a component and key/value pairs to construct the component.\r\n * See EntityFactory.\r\n */\r\nvar ComponentBlueprint = /** @class */ (function () {\r\n    /**\r\n     * Creates a new blueprint with the specified component name\r\n     *\r\n     * @param name the name of the component.\r\n     */\r\n    function ComponentBlueprint(name) {\r\n        this.overrides = emptyOverrides;\r\n        this.values = {};\r\n        this.name = name;\r\n    }\r\n    /**\r\n     * Set the overrides map\r\n     *\r\n     * @param overrides the overrides to use on the next get* calls\r\n     */\r\n    ComponentBlueprint.prototype.setOverrides = function (overrides) {\r\n        this.overrides = overrides || emptyOverrides;\r\n    };\r\n    /**\r\n     * Set a key/value pair\r\n     *\r\n     * @param key the key\r\n     * @param value the value\r\n     */\r\n    ComponentBlueprint.prototype.set = function (key, value) {\r\n        this.values[key] = value;\r\n    };\r\n    /**\r\n     * Get a boolean value\r\n     *\r\n     * @param key the key\r\n     * @param defaultValue the value to return if no value exists for key.\r\n     * @return The corresponding value or defaultValue if none exists.\r\n     */\r\n    ComponentBlueprint.prototype.getBool = function (key, defaultValue) {\r\n        if (this.overrides.hasOwnProperty(key)) {\r\n            var value = this.overrides[key];\r\n            if (value === true || value === false)\r\n                return value;\r\n        }\r\n        if (this.values.hasOwnProperty(key)) {\r\n            var value = this.values[key];\r\n            if (value === true || value === false)\r\n                return value;\r\n        }\r\n        return defaultValue;\r\n    };\r\n    /**\r\n     * Get an integer value\r\n     *\r\n     * @param key the key\r\n     * @param defaultValue the value to return if no value exists for key.\r\n     * @return The corresponding value or defaultValue if none exists.\r\n     */\r\n    ComponentBlueprint.prototype.getNumber = function (key, defaultValue) {\r\n        if (this.overrides.hasOwnProperty(key)) {\r\n            var value = this.overrides[key];\r\n            if (typeof (value) === \"number\")\r\n                return value;\r\n        }\r\n        if (this.values.hasOwnProperty(key)) {\r\n            var value = this.values[key];\r\n            if (typeof (value) === \"number\")\r\n                return value;\r\n        }\r\n        return defaultValue;\r\n    };\r\n    /**\r\n     * Get a string value\r\n     *\r\n     * @param key the key\r\n     * @param defaultValue the value to return if no value exists for key.\r\n     * @return The corresponding value or defaultValue if none exists.\r\n     */\r\n    ComponentBlueprint.prototype.getString = function (key, defaultValue) {\r\n        if (this.overrides.hasOwnProperty(key)) {\r\n            var value = this.overrides[key];\r\n            if (typeof (value) === \"string\")\r\n                return value;\r\n        }\r\n        if (this.values.hasOwnProperty(key)) {\r\n            var value = this.values[key];\r\n            if (typeof (value) === \"string\")\r\n                return value;\r\n        }\r\n        return defaultValue;\r\n    };\r\n    /**\r\n     * Get any type of value\r\n     *\r\n     * @param key the key\r\n     * @param defaultValue the value to return if no value exists for key.\r\n     * @return The corresponding value or defaultValue if none exists.\r\n     */\r\n    ComponentBlueprint.prototype.getAny = function (key, defaultValue) {\r\n        if (this.overrides.hasOwnProperty(key))\r\n            return this.overrides[key];\r\n        if (this.values.hasOwnProperty(key))\r\n            return this.values[key];\r\n        return defaultValue;\r\n    };\r\n    return ComponentBlueprint;\r\n}());\r\nexports.ComponentBlueprint = ComponentBlueprint;\r\n/**\r\n * Stores a list of {@link ComponentBlueprint}s needed to construct an Entity.\r\n * See EntityFactory.\r\n */\r\nvar EntityBlueprint = /** @class */ (function () {\r\n    function EntityBlueprint() {\r\n        /** The component blueprints to use */\r\n        this.components = [];\r\n    }\r\n    /** @param blueprint shared_ptr to a ComponentBlueprint. */\r\n    EntityBlueprint.prototype.add = function (blueprint) {\r\n        this.components.push(blueprint);\r\n    };\r\n    return EntityBlueprint;\r\n}());\r\nexports.EntityBlueprint = EntityBlueprint;\r\n//# sourceMappingURL=Blueprint.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/Blueprint.js\n// module id = 52\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Component factory interface. Used to construct {@link Component}s from {@link ComponentBlueprint}s.\r\n */\r\nvar ComponentFactory = /** @class */ (function () {\r\n    function ComponentFactory() {\r\n    }\r\n    return ComponentFactory;\r\n}());\r\nexports.ComponentFactory = ComponentFactory;\r\n/**\r\n * A template ComponentFactory implementation for simple components\r\n * which don't need to read data from the blueprint.\r\n */\r\nvar SimpleComponentFactory = /** @class */ (function (_super) {\r\n    __extends(SimpleComponentFactory, _super);\r\n    /** Default constructor */\r\n    function SimpleComponentFactory(componentClass) {\r\n        var _this = _super.call(this) || this;\r\n        _this.componentClass = componentClass;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Assemble a component for an entity.\r\n     *\r\n     * @param entity the entity to add the component to\r\n     * @param blueprint the blueprint will be ignored\r\n     */\r\n    SimpleComponentFactory.prototype.assemble = function (entity, blueprint) {\r\n        return !!entity.add(new this.componentClass());\r\n    };\r\n    return SimpleComponentFactory;\r\n}(ComponentFactory));\r\nexports.SimpleComponentFactory = SimpleComponentFactory;\r\n//# sourceMappingURL=ComponentFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/ComponentFactory.js\n// module id = 53\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2015 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DelayedOperationType;\r\n(function (DelayedOperationType) {\r\n    DelayedOperationType[DelayedOperationType[\"Add\"] = 0] = \"Add\";\r\n    DelayedOperationType[DelayedOperationType[\"Remove\"] = 1] = \"Remove\";\r\n    DelayedOperationType[DelayedOperationType[\"RemoveAll\"] = 2] = \"RemoveAll\";\r\n})(DelayedOperationType || (DelayedOperationType = {}));\r\nvar DelayedOperation = /** @class */ (function () {\r\n    function DelayedOperation(type, entry) {\r\n        this.entry = null;\r\n        this.nextOperation = null;\r\n        this.type = type;\r\n        this.entry = entry;\r\n    }\r\n    return DelayedOperation;\r\n}());\r\n/**\r\n * A class to help delaying add/remove/removeAll operations during engine updates.\r\n *\r\n * @typeparam T The entry class\r\n */\r\nvar DelayedOperationHandler = /** @class */ (function () {\r\n    /**\r\n     * @param listener The listener callbacks\r\n     */\r\n    function DelayedOperationHandler(listener) {\r\n        this.nextOperation = null;\r\n        this.lastOperation = null;\r\n        this.listener = listener;\r\n    }\r\n    /**\r\n     * Process all scheduled add/remove/removeAll operations\r\n     */\r\n    DelayedOperationHandler.prototype.process = function () {\r\n        while (this.nextOperation) {\r\n            var operation = this.nextOperation;\r\n            switch (operation.type) {\r\n                case DelayedOperationType.Add:\r\n                    if (operation.entry)\r\n                        this.listener.onAdd(operation.entry);\r\n                    break;\r\n                case DelayedOperationType.Remove:\r\n                    if (operation.entry)\r\n                        this.listener.onRemove(operation.entry);\r\n                    break;\r\n                case DelayedOperationType.RemoveAll:\r\n                    this.listener.onRemoveAll();\r\n                    break;\r\n                default:\r\n                    throw \"Unexpected Operation type: \" + operation.type;\r\n            }\r\n            this.nextOperation = operation.nextOperation;\r\n        }\r\n        this.nextOperation = null;\r\n        this.lastOperation = null;\r\n    };\r\n    DelayedOperationHandler.prototype.schedule = function (type, entry) {\r\n        var operation = new DelayedOperation(type, entry);\r\n        if (this.lastOperation)\r\n            this.lastOperation.nextOperation = operation;\r\n        else\r\n            this.nextOperation = operation;\r\n        this.lastOperation = operation;\r\n    };\r\n    /**\r\n     * Schedule an add operation\r\n     *\r\n     * @param entry the entry to add\r\n     */\r\n    DelayedOperationHandler.prototype.add = function (entry) {\r\n        this.schedule(DelayedOperationType.Add, entry);\r\n    };\r\n    /**\r\n     * Schedule a remove operation\r\n     *\r\n     * @param entry the entry to remove\r\n     */\r\n    DelayedOperationHandler.prototype.remove = function (entry) {\r\n        this.schedule(DelayedOperationType.Remove, entry);\r\n    };\r\n    /**\r\n     * Schedule a removeAll operation\r\n     */\r\n    DelayedOperationHandler.prototype.removeAll = function () {\r\n        this.schedule(DelayedOperationType.RemoveAll, null);\r\n    };\r\n    return DelayedOperationHandler;\r\n}());\r\nexports.DelayedOperationHandler = DelayedOperationHandler;\r\n//# sourceMappingURL=DelayedOperationHandler.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/DelayedOperationHandler.js\n// module id = 54\n// module chunks = 0","\"use strict\";\r\n/*******************************************************************************\r\n * Copyright 2011 See AUTHORS file.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n ******************************************************************************/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * A factory to create {@link Entity entities} from blueprints.\r\n */\r\nvar EntityFactory = /** @class */ (function () {\r\n    function EntityFactory() {\r\n        this.componentFactories = {};\r\n        this.entities = {};\r\n    }\r\n    /**\r\n     * Add a component factory\r\n     *\r\n     * @param name the name used to identify a Component\r\n     * @param factory the factory to use\r\n     */\r\n    EntityFactory.prototype.addComponentFactory = function (name, factory) {\r\n        this.componentFactories[name] = factory;\r\n    };\r\n    /**\r\n     * @param name the name used to identify the EntityBlueprint\r\n     * @param blueprint the blueprint\r\n     */\r\n    EntityFactory.prototype.addEntityBlueprint = function (name, blueprint) {\r\n        this.entities[name] = blueprint;\r\n    };\r\n    /**\r\n     * Add all {@link Component}s found in a blueprint to the supplied entity.\r\n     *\r\n     * @param entity the entity to add the {@link Component}s to.\r\n     * @param blueprintname the name used to identify the EntityBlueprint\r\n     * @return true on success.\r\n     */\r\n    EntityFactory.prototype.assemble = function (entity, blueprintname, overrides) {\r\n        var blueprint = this.entities[blueprintname];\r\n        var success = false;\r\n        if (blueprint) {\r\n            success = true;\r\n            for (var _i = 0, _a = blueprint.components; _i < _a.length; _i++) {\r\n                var componentBlueprint = _a[_i];\r\n                var factory = this.componentFactories[componentBlueprint.name];\r\n                componentBlueprint.setOverrides(overrides && overrides[componentBlueprint.name]);\r\n                if (!factory || !factory.assemble(entity, componentBlueprint)) {\r\n                    success = false;\r\n                    console.error('Could not assemble component ' + componentBlueprint.name);\r\n                }\r\n                componentBlueprint.setOverrides();\r\n            }\r\n        }\r\n        return success;\r\n    };\r\n    return EntityFactory;\r\n}());\r\nexports.EntityFactory = EntityFactory;\r\n//# sourceMappingURL=EntityFactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/typed-ecstasy/dist/src/utils/EntityFactory.js\n// module id = 55\n// module chunks = 0"],"sourceRoot":""}